<?php
class Tools extends Conectar{
	var $UsuarioId;

	function Tools($UsuarioId)
	{		
		$this->Conectar();
		$this->UsuarioId=$UsuarioId;
	return;	
	}//Tools


	/* FUNCIONES GENERALES ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

	function Consulta($sql){
		$Query=mysql_query("$sql", $this->conexion) or die("Error al Consultar: $sql ".mysql_error());
	return $Query;
	}//Consulta

	function Insertar($sql){
		$query=mysql_query("$sql", $this->conexion) or die("Error al Insertar: $sql ".mysql_error());
		$Identificador= mysql_insert_id($this->conexion);
	return $Identificador;
	}//Insertar

	function Fin(){
		mysql_close($this->conexion);
	}//Fin

	function CambiarFormatoFecha($Fecha){ 
	    list($Dia,$Mes,$Anio)=explode("/",$Fecha); 
   		return $Anio."-".$Mes."-".$Dia; 
	}//CambiarFormatoFecha

	function StartTransaccion()
	{
		$Q0="SET AUTOCOMMIT=0";
		$Q1="BEGIN";
		$this->Consulta($Q0);
		$this->Consulta($Q1);
	}//StartTransaccion

	function AceptaTransaccion()
	{
		$Q0="COMMIT";
		$this->Consulta($Q0);
	}//AceptaTransaccion

	function CancelaTransaccion()
	{
		$Q0="ROLLBACK";
		$this->Consulta($Q0);
	}//CancelaTransaccion

	function DiaSemana($Fecha){
		$Fecha2 =$Fecha;
		$separa = explode('-',$Fecha2);
		$dia = $separa[0];		
		$mes = $separa[1];
		$anio = $separa[2];
		$dias = array('DOMINGO', 'LUNES', 'MARTES', 'MIERCOLES', 'JUEVES', 'VIERNES', 'SABADO');
	return $dias[date("w", mktime(0, 0, 0, $mes, $dia, $anio))];
	}//DiaSemana

	function Scroll($tabla,$campo_id,$campo_txt,$valor, $Criterio, $Orden){
		$query="SELECT $campo_id,$campo_txt FROM $tabla WHERE $Criterio GROUP BY $campo_txt ORDER BY $Orden ASC";
		$resultado=mysql_query("$query", $this->conexion) or die(mysql_error());
	
		while($arreglo=mysql_fetch_row($resultado))
		{
			if ($valor==$arreglo[0])
			{
				echo "<option selected value=\"$arreglo[0]\" title=\"".utf8_decode($arreglo[1])."\" >".utf8_decode($arreglo[1])."</option> \n";	
			}
			else 
			{
				echo "<option value=\"$arreglo[0]\" title=\"$arreglo[1]\">".utf8_decode($arreglo[1])."</option> \n";	
			}
		}
	}//Scroll

	function getOrden($R0)
	{
		$orden = array
		(
		"filas" => mysql_num_rows($R0),
		"columnas" => mysql_num_fields($R0),
		);
		return $orden;
	}//getOrden

	function getHModulo($ModuloId)
	{
		$Q0="SELECT ModuloTxt,Img FROM Modulos WHERE ModuloId=$ModuloId";
		return mysql_fetch_row($this->Consulta($Q0));
	}

	function Existe($Campo, $Valor, $Tabla)
	{
		$Q0="SELECT COUNT($Campo) FROM $Tabla WHERE $Campo='$Valor'";
		list($Cta)=mysql_fetch_row($this->Consulta($Q0));
		if($Cta>0)
			return true;

		return false;
	}

/* :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

/* FUNCIONES USUARIOS ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

	function getMenuUsuarios(){
	$Q0="
		SELECT T1.FamiliaId, T1.Familia, T1.Img,T2.Modulo, T2.Url, T2.Img
		FROM Familias AS T1
		LEFT JOIN Modulos AS T2 ON T2.FamiliaId=T1.FamiliaId
		INNER JOIN ModulosOperaciones AS T3 ON T3.ModuloId=T2.ModuloId AND T3.OperacionId=1
		INNER JOIN ModulosOperacionesUsuarios AS T4 ON T4.ModuloOperacionId=T3.ModuloOperacionId AND T4.UsuarioId=$this->UsuarioId
		WHERE T2.Activo=1
		ORDER BY T1.FamiliaId, T2.Modulo
		";
	return $this->Consulta($Q0);
	}//getMenuUsuarios

	function getPermisosModulo($ModuloId)
	{
		$Q0="SELECT OperacionId FROM ModulosOperacionesUsuarios AS T1
			 LEFT JOIN ModulosOperaciones AS T2 ON T2.ModuloOperacionId=T1.ModuloOperacionId
 			 WHERE ModuloId=$ModuloId AND UsuarioId=$this->UsuarioId";

		$R0=$this->Consulta($Q0);

		 $Permisos=array();

		while($A0=mysql_fetch_row($R0))
		{
			$Permisos[]=$A0[0];
		}
	return $Permisos;
	}//getPermisosLista


	function changePassword($Actual, $Nuevo)
	{
		$this->Consulta("UPDATE Usuarios SET Password=MD5('$Nuevo') WHERE UsuarioId=$this->UsuarioId AND Password=MD5('$Actual')");
		if(mysql_affected_rows()>0)
		return true;
		return false;
	}//changePassword

	function addBitacora($ModuloId, $OperacionId, $ObjetoId, $Comentario, $Equipo)
	{

		$Q0="INSERT INTO Bitacora
			 (BitacoraId, UsuarioId, Host, ModuloId, OperacionId, ObjetoId, Fecha, Hora, Comentario)
			 VALUES(NULL, $this->UsuarioId, '$Equipo', '$ModuloId', '$OperacionId', '$ObjetoId', CURDATE(), CURTIME(), '$Comentario')";

		return $this->Consulta($Q0);
	}

	function getMisPuntos()
	{
		$Q0="SELECT CAST(GROUP_CONCAT(PuntoVentaId) AS CHAR) AS Puntos
			 FROM HistorialPuntosEmpleados AS T1
			 LEFT JOIN Usuarios AS T2 ON T2.EmpleadoId=T1.EmpleadoId
			 WHERE UsuarioId=$this->UsuarioId
			 GROUP BY UsuarioId";

		list($MisPuntos)=mysql_fetch_row($this->Consulta($Q0));
		if(!isset($MisPuntos))
			$MisPuntos=0;
		return $MisPuntos;

	}

	function getFiltro($Opc)
	{
		$Q0="SELECT Corporativo FROM Usuarios WHERE UsuarioId=".$this->UsuarioId;		
		list($Corporativo)=mysql_fetch_row($this->Consulta($Q0));

		switch ($Opc) {
			case '1':
						if ($Corporativo==1) 
							return 'TRUE';
						else
							$Q0="Corporativo = 0";
				break;	

		}
		return $Q0;

	}


/* ADMINISTRACION DE AVISOS ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	function getAvisos()
	{
		$Q0="SELECT Aviso, DATE_FORMAT(FechaInicial,'%d/%m/%Y') AS Inicial,
       				DATE_FORMAT(FechaFinal,'%d/%m/%Y') AS Final, CONCAT_WS(' ', Nombre, Paterno, Materno)
				FROM Avisos AS T1
				LEFT JOIN Usuarios AS T2 ON T2.UsuarioId=T1.UsuarioId
				LEFT JOIN Empleados AS T3 ON T3.EmpleadoId=T2.EmpleadoId
        		LEFT JOIN AvisosUsuarios AS T4 ON T4.AvisoId=T1.AvisoId AND T4.UsuarioId=$this->UsuarioId
				WHERE CURDATE() BETWEEN FechaInicial AND FechaFinal AND T1.Activo=1
        		AND ((T4.AvisoId IS NOT NULL AND Privado=1) OR ((Privado=0)))

			";
		return $this->Consulta($Q0);
	}


	function getAdmNotasAll()
	{
		$Q0="SELECT '#Aviso', 'Aviso', 'Fecha Inicial&nbsp&nbsp&nbsp', 'Fecha Final&nbsp&nbsp&nbsp&nbsp', 'Activo&nbsp&nbsp'
				UNION
				SELECT AvisoId, Aviso, DATE_FORMAT(FechaInicial,'%d-%m-%Y'), DATE_FORMAT(FechaFinal,'%d-%m-%Y'), Activo 
				FROM Avisos
				";
		return $this->Consulta($Q0);
	}//getAdmNotasAll	

	function getAdmNotas($NotaId)
	{
		$Q0="SELECT Aviso, DATE_FORMAT(FechaInicial,'%d-%m-%Y'), DATE_FORMAT(FechaFinal,'%d-%m-%Y')
			FROM Avisos AS T1
			WHERE AvisoId IN ($NotaId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getAdmNotas

	function getBuscaAdmNotas($Nota, $FechaInicial, $FechaFinal, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$FiltroInicial='';
		$FiltroFinal='';

		if($FechaInicial!='')
			$FiltroInicial="AND FechaInicial LIKE '%$FechaInicial%'";
		if($FechaFinal!='')
			$FiltroFinal="AND FechaFinal LIKE '%$FechaFinal%'";

		$Q0="SELECT '#Aviso', 'Aviso', 'Fecha Inicial&nbsp&nbsp&nbsp', 'Fecha Final&nbsp&nbsp&nbsp&nbsp', 'Activo&nbsp&nbsp'
				UNION
				SELECT AvisoId, Aviso, DATE_FORMAT(FechaInicial,'%d-%m-%Y'), DATE_FORMAT(FechaFinal,'%d-%m-%Y'), Activo 
				FROM Avisos				
				WHERE Aviso LIKE '%$Nota%'				
				$FiltroInicial 
				$FiltroFinal 
				AND Activo IN ($FActivo)
				";								
		return $this->Consulta($Q0);
	}//getBuscaAdmNotas

	function addAdmNotas($Nota, $FInicio, $FFinal)
	{
		$FInicio=$this->CambiarFormatoFecha($FInicio);
		$FFinal=$this->CambiarFormatoFecha($FFinal);
		$Q0="INSERT INTO Avisos (AvisoId, Aviso, FechaInicial, FechaFinal, UsuarioId, Activo)
			 VALUES(NULL, '$Nota', '$FInicio', '$FFinal', $this->UsuarioId, 1)";
		$this->Insertar($Q0);
	}//addAdmNotas

	function deleteAdmNotas($llaves)
	{
		$Q0="UPDATE Avisos SET Activo=0 WHERE AvisoId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteAdmNotas

	function activaAdmNotas($llaves)
	{
		$Q0="UPDATE Avisos SET Activo=1 WHERE AvisoId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaAdmNotas
	
	function updateAdmNotas($AvisoId, $Aviso, $FInicio, $FFinal)
	{
		$FInicio=$this->CambiarFormatoFecha($FInicio);
		$FFinal=$this->CambiarFormatoFecha($FFinal);
		$Q0="UPDATE Avisos
			 SET 	Aviso='$Aviso',
			 		FechaInicial='$FInicio',
			 		FechaFinal='$FFinal'
			 WHERE AvisoId =REPLACE('$AvisoId', ',', '')";
		$this->Consulta($Q0);
	}//updateAdmNotas

/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

/* ADMINISTRACION DE PERSONAL ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

	function addEmpleado($Nombre, $Paterno, $Materno, $FechaNacimiento, $Curp, $Rfc, $Ife, $Nss, $Genero, $NacionalidadId, $PuestoId, $CategoriaId, $FechaAltaPuesto, $PuntoVentaId, $FechaAltaPunto, $Fisico, $EscolaridadId, $ProfesionId, $EstadoCivilId, $BancoId, $NoCuenta, $Clabe, $ColoniaId, $Calle, $NExterior, $NInterior, $Telefono, $Movil, $TipoSangre, $ParentescoId, $NombreContacto, $ColoniaIdContacto, $CalleContacto, $NExteriorContacto, $NInteriorContacto, $TelefonoContacto, $MovilContacto, $CorreoElectronicoContacto, $CoordinadorId)
	{
		$FechaNacimiento=$this->CambiarFormatoFecha($FechaNacimiento);
		$FechaAltaPuesto=$this->CambiarFormatoFecha($FechaAltaPuesto);
		$FechaAltaPunto=$this->CambiarFormatoFecha($FechaAltaPunto);

		if($this->Existe('Curp', $Curp, 'Empleados'))
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro, La persona ya esta registrada!</span>');	

		$Q0="INSERT INTO Empleados (EmpleadoId, Nombre, Paterno, Materno, FechaNacimiento, Curp, Rfc, Ife, NumeroSeguroSocial, Sexo, NacionalidadId)
			VALUES	(NULL, UCASE('$Nombre'), UCASE('$Paterno'), UCASE('$Materno'), '$FechaNacimiento', UCASE('$Curp'), UCASE('$Rfc'), '$Ife', '$Nss', '$Genero', $NacionalidadId)";

		$this->StartTransaccion();
		if($this->Consulta($Q0))
		{
			$EmpleadoId=mysql_insert_id();

		$Q1="INSERT INTO HistorialPuestosEmpleados (HistorialPuestoEmpleadoId, EmpleadoId, PuestoId, CategoriaId, FechaAlta, FechaBaja, CausaBajaId)
			 VALUES (NULL, $EmpleadoId, $PuestoId, $CategoriaId, '$FechaAltaPuesto', '0000-00-00', 0)";

		$Q2="INSERT INTO HistorialPuntosEmpleados 
			 SELECT NULL, $EmpleadoId, PuntoVentaId, '$FechaAltaPunto', '0000-00-00', 0 FROM PuntosVenta WHERE PuntoVentaId IN ($PuntoVentaId $Fisico)";

		$Q3="UPDATE HistorialPuntosEmpleados SET Fisico=1
			 WHERE EmpleadoId=$EmpleadoId AND PuntoVentaId=$Fisico";

		$Q4="INSERT INTO HistorialDatosEmpleados (HistorialDatosEmpleadoId, EmpleadoId, EscolaridadId, ProfesionId, EstadoCivilId, BancoId, NoCuenta, Clabe, ColoniaId, Calle, NExterior, NInterior, Telefono, Movil, TipoSangre)
			 VALUES (NULL, $EmpleadoId, $EscolaridadId, $ProfesionId, $EstadoCivilId, $BancoId, '$NoCuenta', '$Clabe', $ColoniaId, '$Calle', '$NExterior', '$NInterior', '$Telefono', '$Movil', '$TipoSangre')";

		$Q5="INSERT INTO ContactosEmergencia (EmpleadoId, ParentescoId, Nombre, ColoniaId, Calle, NExterior, NInterior, Telefono, Movil, CorreoElectronico)
			 VALUES($EmpleadoId, $ParentescoId, UCASE('$NombreContacto'), $ColoniaIdContacto, '$CalleContacto', '$NExteriorContacto', '$NInteriorContacto', '$TelefonoContacto', '$MovilContacto', '$CorreoElectronicoContacto')";

		$Q6="INSERT INTO CorreosEmpleados (EmpleadoId, Correo, Comentario, Respuesta, Activo)
			 VALUES($EmpleadoId, 'Solicitar Correo', '', '', 1)" ;

		$oldfile='Photo/'.$this->UsuarioId.'123_.jpg';
		$newfile='Photo/'.$this->UsuarioId.'123.jpg';

		$Q7="INSERT INTO CoordinadoresEmpleados (CoordinadorId, EmpleadoId, FechaAlta, FechaBaja)
			 VALUES($CoordinadorId, $EmpleadoId, '$FechaAltaPunto', '0000-00-00')";

		
		if($this->Consulta($Q1) & $this->Consulta($Q2) & $this->Consulta($Q3) & $this->Consulta($Q4) & $this->Consulta($Q5) & $this->Consulta($Q6) & $this->addBitacora(10, 2, $EmpleadoId, '','') & unlink($oldfile) & rename($newfile, 'Photo/'.$EmpleadoId.'.jpg'))
			{
				if($CoordinadorId!=0)
				{
					if($this->Consulta($Q7))
					{
						$this->AceptaTransaccion();
						return utf8_decode('<span class="notificacion">Â¡El registro del asesor se realizo satisfactoriamente!</span>');
					}
					else
					{
						$this->CancelaTransaccion();
						return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');	
					}			
				}

				$this->AceptaTransaccion();
				return utf8_decode('<span class="notificacion">Â¡El registro se realizo satisfactoriamente!</span>');
			}
		}
			$this->CancelaTransaccion();
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');	
	}

	function editEmpleado($EmpleadoId, $Nombre, $Paterno, $Materno, $FechaNacimiento, $Curp, $Rfc, $Ife, $Nss, $Genero, $NacionalidadId, $PuestoId, $CategoriaId, $FechaAltaPuesto, $PuntoVentaId, $FechaAltaPunto, $Fisico, $EscolaridadId, $ProfesionId, $EstadoCivilId, $BancoId, $NoCuenta, $Clabe, $ColoniaId, $Calle, $NExterior, $NInterior, $Telefono, $Movil, $TipoSangre, $ParentescoId, $NombreContacto, $ColoniaIdContacto, $CalleContacto, $NExteriorContacto, $NInteriorContacto, $TelefonoContacto, $MovilContacto, $CorreoElectronicoContacto, $CoordinadorId)
	{
		$FechaNacimiento=$this->CambiarFormatoFecha($FechaNacimiento);
		$FechaAltaPuesto=$this->CambiarFormatoFecha($FechaAltaPuesto);
		$FechaAltaPunto=$this->CambiarFormatoFecha($FechaAltaPunto);

		$Q0="UPDATE Empleados
			SET Nombre=UCASE('$Nombre'),
			Paterno=UCASE('$Paterno'),
			Materno=UCASE('$Materno'),
			FechaNacimiento='$FechaNacimiento',
			Curp=UCASE('$Curp'),
			Rfc=UCASE('$Rfc'),
			Ife='$Ife',
			NumeroseguroSocial='$Nss',
			Sexo='$Genero',
			NacionalidadId=$NacionalidadId
			WHERE EmpleadoId=$EmpleadoId";
		

		$Q1="UPDATE HistorialPuestosEmpleados
			 SET FechaBaja='$FechaAltaPuesto'
			 WHERE EmpleadoId=$EmpleadoId";

		$Q2="INSERT INTO HistorialPuestosEmpleados (HistorialPuestoEmpleadoId, EmpleadoId, PuestoId, FechaAlta, FechaBaja, CausaBajaId)
			 VALUES (NULL, $EmpleadoId, $PuestoId, '$FechaAltaPuesto', '0000-00-00', 0)";

		$Q3="INSERT INTO HistorialDatosEmpleados (HistorialDatosEmpleadoId, EmpleadoId, EscolaridadId, ProfesionId, EstadoCivilId, BancoId, NoCuenta, Clabe, ColoniaId, Calle, NExterior, NInterior, Telefono, Movil, TipoSangre)
			 VALUES (NULL, $EmpleadoId, $EscolaridadId, $ProfesionId, $EstadoCivilId, $BancoId, '$NoCuenta', '$Clabe', $ColoniaId, '$Calle', '$NExterior', '$NInterior', '$Telefono', '$Movil', '$TipoSangre')";

		$Q4="UPDATE ContactosEmergencia
			SET ParentescoId=$ParentescoId,
			Nombre=UCASE('$NombreContacto'),
			ColoniaId=$ColoniaIdContacto,
			Calle='$CalleContacto',
			NExterior='$NExteriorContacto',
			NInterior='$NInteriorContacto',
			Telefono='$TelefonoContacto',
			Movil='$MovilContacto',
			CorreoElectronico='$CorreoElectronicoContacto'
			WHERE EmpleadoId=$EmpleadoId";

		$Q5="UPDATE
			HistorialPuntosEmpleados
			SET FechaBaja='$FechaAltaPunto'
			WHERE EmpleadoId=$EmpleadoId AND PuntoVentaId NOT IN ($PuntoVentaId $Fisico)";


		$Q6="UPDATE
			HistorialPuntosEmpleados
			SET Fisico=0
			WHERE EmpleadoId=$EmpleadoId";


		$Q7="INSERT INTO HistorialPuntosEmpleados 
			SELECT NULL, $EmpleadoId, T1.PuntoVentaId, '$FechaAltaPunto', '0000-00-00', 0
			FROM PuntosVenta AS T1
			LEFT JOIN HistorialPuntosEmpleados AS T2 ON T2.PuntoventaId=T1.PuntoVentaId AND EmpleadoId=$EmpleadoId
			WHERE T1.PuntoVentaId IN ($PuntoVentaId $Fisico) AND T2.PuntoVentaId IS NULL";	

		$Q8="UPDATE HistorialPuntosEmpleados SET Fisico=1
			 WHERE EmpleadoId=$EmpleadoId AND PuntoVentaId=$Fisico";

		$Q9="UPDATE CoordinadoresEmpleados SET FechaBaja=CURDATE()";
		$Q10="INSERT INTO CoordinadoresEmpleados (CoordinadorId, EmpleadoId, FechaAlta, FechaBaja)
			 VALUES($CoordinadorId, $EmpleadoId, '$FechaAltaPunto', '0000-00-00')";



		$oldfile='Photo/'.$this->UsuarioId.'123_.jpg';
		$newfile='Photo/'.$this->UsuarioId.'123.jpg';
		$this->StartTransaccion();

		if($this->Consulta($Q0) & $this->Consulta($Q1) & $this->Consulta($Q2) & $this->Consulta($Q3) & $this->Consulta($Q4) & $this->Consulta($Q5) & $this->Consulta($Q6) & $this->Consulta($Q7) & $this->Consulta($Q8) & $this->addBitacora(10, 5, $EmpleadoId, '',''))
			{

				if($CoordinadorId!=0)
				{
					if($this->Consulta($Q9) & $this->Consulta($Q10))
					{
						$this->AceptaTransaccion();
						return utf8_decode('<span class="notificacion">Â¡El registro se realizo satisfactoriamente!</span>');
					}
					else
					{
						$this->CancelaTransaccion();
						return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');	
					}			
				}

				$this->AceptaTransaccion();				

				if(file_exists ($oldfile))
				{
				unlink($oldfile); 
				rename($newfile, 'Photo/'.$EmpleadoId.'.jpg');
				}
				return utf8_decode('<span class="notificacion">Â¡La actualizacion se realizo satisfactoriamente!</span>');
			}
		
			$this->CancelaTransaccion();
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar la actualizacion!</span>');

	}

	function getEmpleado($EmpleadoId)
	{
		$Q0="SELECT T1.EmpleadoId, T1.Nombre, T1.Paterno, T1.Materno, DATE_FORMAT(T1.FechaNacimiento,'%d/%m/%Y'),
			       T1.Curp, T1.Rfc, T1.Ife, T1.NumeroSeguroSocial, T1.Sexo, T1.NacionalidadId, T2.PuestoId, T2.CategoriaId, DATE_FORMAT(T2.FechaAlta,'%d/%m/%Y'),
			       T3.EscolaridadId, T3.ProfesionId, T3.EstadoCivilId, T3.BancoId, T3.NoCuenta, T3.Clabe, T3.ColoniaId, T4.Colonia, T4.CodigoPostal, T3.Calle,
			       T3.NExterior, T3.NInterior, T3.Telefono, T3.Movil, T3.TipoSangre, T5.ParentescoId, T5.Nombre, T5.ColoniaId, T6.Colonia, T6.CodigoPostal, T5.Calle,
			       T5.NExterior, T5.NInterior, T5.Telefono, T5.Movil, T5.CorreoElectronico, T7.Puntos, T7.Fisico, IFNULL(T8.CoordinadorId,0)
			FROM Empleados AS T1
			LEFT JOIN HistorialPuestosEmpleados AS T2 ON T2.EmpleadoId=T1.EmpleadoId AND T2.FechaBaja='0000-00-00'
			LEFT JOIN (
						SELECT EmpleadoId,	EscolaridadId,	ProfesionId,	EstadoCivilId,	BancoId,	NoCuenta,	Clabe,	ColoniaId,	Calle,	NExterior,	NInterior,	Telefono,	Movil,	TipoSangre
						FROM (
								SELECT EmpleadoId,	EscolaridadId,	ProfesionId,	EstadoCivilId,	BancoId,	NoCuenta,	Clabe,	ColoniaId,	Calle,	NExterior,	NInterior,	Telefono,	Movil,	TipoSangre
								FROM HistorialDatosEmpleados ORDER BY HistorialDatosEmpleadoId DESC
					 		 ) AS T1 GROUP BY EmpleadoId
					  ) AS T3 ON T3.EmpleadoId=T1.EmpleadoId
			LEFT JOIN Colonias AS T4 ON T4.ColoniaId=T3.ColoniaId
			LEFT JOIN ContactosEmergencia AS T5 ON T5.EmpleadoId=T1.EmpleadoId
			LEFT JOIN Colonias AS T6 ON T6.ColoniaId=T5.ColoniaId
	        LEFT JOIN (
	                  SELECT T1.EmpleadoId, CAST(GROUP_CONCAT(T1.PuntoVentaId) AS CHAR) AS Puntos, T2.PuntoVentaId AS Fisico
	                  FROM HistorialPuntosEmpleados AS T1
	                  LEFT JOIN HistorialPuntosEmpleados AS T2 ON T2.EmpleadoId=T1.EmpleadoId AND T2.Fisico=1 AND T2.FechaBaja='0000-00-00'
	                  WHERE T1.Fechabaja='0000-00-00' AND T1.EmpleadoId IN ($EmpleadoId 0)
	                  GROUP BY EmpleadoId
	                ) AS T7 ON T7.EmpleadoId=T1.EmpleadoId
			LEFT JOIN CoordinadoresEmpleados AS T8 ON T8.EmpleadoId=T1.EmpleadoId
			WHERE T1.EmpleadoId IN ($EmpleadoId 0)
			GROUP BY T1.EmpleadoId";

			return mysql_fetch_row($this->Consulta($Q0));
	}

/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

/* PUNTOS DE VENTA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

function getPuntosPlaza()
{
	$MisPuntos=$this->getMisPuntos();
	$Q0="SELECT T1.PuntoVentaId, T2.Plaza, T1.PuntoVenta FROM PuntosVenta AS T1
	LEFT JOIN Plazas AS T2 ON T2.PlazaId=T1.PlazaId
	WHERE PuntoVentaId IN ($MisPuntos)";

	return $this->Consulta($Q0);
}

function getPuntosEmpleado($EmpleadoId)
{
	$MisPuntos=$this->getMisPuntos();
	$Q0="SELECT T1.PuntoVentaId, T2.Plaza, T1.PuntoVenta, IFNULL(T3.PuntoventaId,0), IFNULL(T3.Fisico,0) FROM PuntosVenta AS T1
		LEFT JOIN Plazas AS T2 ON T2.PlazaId=T1.PlazaId
  		  LEFT JOIN HistorialPuntosEmpleados AS T3 ON T3.PuntoVentaId=T1.PuntoventaId AND T3.FechaBaja='0000-00-00' AND EmpleadoId=$EmpleadoId
		WHERE T1.PuntoVentaId IN ($MisPuntos)";

	return $this->Consulta($Q0);
}

/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/

function getDatos($ModuloId)
{


	switch ($ModuloId) {
		case '10':		
				$Filtro=$this->getFiltro(1);
				$MisPuntos=$this->getMisPuntos();
				$Q0="SELECT '#Control', 'Region', 'Sub_Region', 'Plaza', 'Punto_de_Venta', 'Nombre', 'Puesto_Actual', 'Coordinador_Asignado', 'Ingreso_Al_Puesto', 'Correo', 'Fecha_de_Ingreso'
					 UNION
					 SELECT T1.EmpleadoId,
					       T8.Region,
					       T7.SubRegion,
					       T6.Plaza,
					       T5.PuntoVenta,
					       CONCAT_WS(' ', T1.Nombre, T1.Paterno, T1.Materno) AS Empleado,
					       T3.Puesto,
                 CONCAT_WS(' ', T13.Nombre, T13.Paterno, T13.Materno) AS Coordinador,
					       DATE_FORMAT(T2.FechaAlta,'%d-%m-%Y') AS FechaAltaPuesto,
					       T9.Correo,
					       DATE_FORMAT(T10.FechaAlta,'%d-%m-%Y') AS FechaIngreso
					 FROM Empleados AS T1
					 LEFT JOIN HistorialPuestosEmpleados AS T2 ON T2.EmpleadoId=T1.EmpleadoId AND T2.Fechabaja='0000-00-00'
					 LEFT JOIN Puestos AS T3 ON T3.PuestoId=T2.PuestoId
					 LEFT JOIN HistorialPuntosEmpleados AS T4 ON T4.EmpleadoId=T1.EmpleadoId AND T4.FechaBaja='0000-00-00' AND T4.Fisico=1
					 LEFT JOIN PuntosVenta AS T5 ON T5.PuntoVentaId=T4.PuntoVentaId
					 LEFT JOIN Plazas AS T6 ON T6.PlazaId=T5.PlazaId
					 LEFT JOIN SubRegiones AS T7 ON T7.SubRegionId=T6.SubRegionId
					 LEFT JOIN Regiones AS T8 ON T8.RegionId=T7.RegionId
					 LEFT JOIN CorreosEmpleados AS T9 ON T9.EmpleadoId=T1.EmpleadoId
					 LEFT JOIN (SELECT EmpleadoId, FechaAlta FROM HistorialPuestosEmpleados GROUP BY EmpleadoId) AS T10 ON T10.EmpleadoId=T1.EmpleadoId
					 LEFT JOIN HistorialPuntosEmpleados AS T11 ON T11.EmpleadoId=T1.EmpleadoId AND T11.FechaBaja='0000-00-00'
           			 LEFT JOIN CoordinadoresEmpleados AS T12 ON T12.EmpleadoId=T1.EmpleadoId AND T12.FechaBaja='0000-00-00'
           			 LEFT JOIN Empleados AS T13 ON T13.EmpleadoId=T12.CoordinadorId
					 WHERE T11.PuntoVentaId IN ($MisPuntos) AND $Filtro
					 GROUP BY T1.EmpleadoId
					";
		break;
		case '22':
				$MisPuntos=$this->getMisPuntos();
				$Q0="SELECT  'Folio', 'Opciones', 'Region', 'Sub_Region', 'Plaza', 'Punto_de_Venta', 'Fecha_Captura', 'Fecha_Contrato', 'Fecha_Sistema_Seguimiento', 'Cliente', 'Lineas', 'Comentario'
					UNION
					SELECT  T1.Folio, CONCAT('<span class=\"leyenda\" onclick=\"changeEstatus(',T1.Folio,')\">Cambiar Estatus</span>'), Region, SubRegion, Plaza, PuntoVenta, FechaCaptura, FechaContrato, FechaSS,  CONCAT_WS(' ',Nombre, Paterno, Materno) AS Cliente, Lineas, Comentarios
					FROM HFolios AS T1
					LEFT JOIN PuntosVenta AS T2 ON T2.PuntoVentaId=T1.PuntoVentaId
					LEFT JOIN Plazas AS T3 ON T3.PlazaId=T2.PlazaId
					LEFT JOIN SubRegiones AS T4 ON T4.SubRegionId=T3.SubRegionId
					LEFT JOIN Regiones AS T5 ON T5.RegionId=T4.RegionId
					LEFT JOIN Clientes AS T6 ON T6.ClienteId=T1.ClienteId
					LEFT JOIN (SELECT Folio, COUNT(RegistroId) AS Lineas FROM LFolios GROUP BY Folio) AS T7 ON T7.Folio=T1.Folio
					WHERE T1.PuntoventaId IN ($MisPuntos) AND MovimientoId=0
				";
		break;
		default:
				$Q0="SELECT CURDATE()";
		break;
		}
		return $this->Consulta($Q0);
	}

//::CapturaDatos :::::::::::::::::::::::::::::::::::::::::::::::::::::::://
	function getDatosTrabajador($Clave)
	{
		$Q0="SELECT T1.PersonalId,
				   CONCAT_WS(' ',T1.Nombre, T1.Paterno, T1.Materno) AS Nombre,
			       T2.Dependencia,
			       T3.Clasificacion,
			       T3.Tipo,
			       T4.Descripcion,
            	   IF(T5.PersonalId IS NULL,'','Â¡La evaluacion de esta persona ya existe!')
			FROM Personal AS T1
			LEFT JOIN Dependencias AS T2 ON T2.DependenciaId=T1.DependenciaId
			LEFT JOIN ClasificacionPersonal AS T3 ON T3.ClasificacionPersonalId=T1.ClasificacionPersonalId
			LEFT JOIN (SELECT T1.PersonalId, GROUP_CONCAT(Descripcion SEPARATOR '<br>') AS Descripcion
			           FROM PersonalDescripciones AS T1
			           LEFT JOIN DescripcionPersonal AS T2 ON T2.Descripcionid=T1.DescripcionId
			           GROUP BY T1.PersonalId
			          ) AS T4 ON T4.PersonalId=T1.PersonalId
      		LEFT JOIN Consolidado AS T5 ON T5.PersonalId=T1.PersonalId
			WHERE T1.Clave='$Clave'
			LIMIT 1";
		return $this->Consulta($Q0);
	}


	function getCompetencias($Competencias)
	{
		$var=explode(",", $Competencias);
		$array=array();

		$Cadena='<table>
					<thead>
						<tr>
							<th>Tipo</th>
							<th>Competencia</th>	
							<th>Grado Competencia</th>				
							<th>Opciones</th>
						</tr>
					</thead>
					<tbody>';
		$t=true;

		foreach ($var as $value) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';

			$v1=explode("|", $value);

			if (!in_array($v1[0], $array) & $v1[0]!=0)
			{
			$array[]=$v1[0];
			
			$Q0="SELECT TipoCompetencia, Competencia, T3.GradoCompetencia 
				 FROM Competencias AS T1
				 LEFT JOIN TiposCompetencia AS T2 ON T2.TipoCompetenciaId=T1.TipoCompetenciaId
				 LEFT JOIN GradosCompetencias AS T3 ON TRUE
				 WHERE CompetenciaId=$v1[0] AND T3.GradoCompetenciaId=$v1[1]";
				list($TipoCompetencia, $Competencia, $GradoCompetencia)=mysql_fetch_row($this->Consulta($Q0));

				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($TipoCompetencia).'</td>
							<td>'.utf8_decode($Competencia).'</td>
							<td>'.utf8_decode($GradoCompetencia).'</td>
							<td align="center"><img src="img/Remove.png" title="Eliminar" onclick="removerC(\''.$v1[0].'|'.$v1[1].'\')" /></td>
						</tr>
				';		
			$t=(!$t);
			}
		}
			
				$Cadena.='</tbody>
				</table>';
		return $Cadena;
	}


	function getFuncionesElegias($Subordinado, $Trabajador, $Jefe, $Puesto)
	{

		$Q0="SELECT T0.Funcion, IFNULL(Subordinado,''), IFNULL(Trabajador,''), IFNULL(Jefe,''), IFNULL(Puesto,'')
			 FROM Funciones AS T0
			 LEFT JOIN (SELECT FuncionId, Funcion, 'X' AS Subordinado FROM Funciones WHERE FuncionId IN ($Subordinado 0)) AS T1 ON T1.FuncionId=T0.FuncionId
			 LEFT JOIN (SELECT FuncionId, Funcion, 'X' AS Trabajador FROM Funciones WHERE FuncionId IN ($Trabajador 0)) AS T2 ON T2.FuncionId=T0.FuncionId
			 LEFT JOIN (SELECT FuncionId, Funcion, 'X' AS Jefe FROM Funciones WHERE FuncionId IN ($Jefe 0)) AS T3 ON T3.FuncionId=T0.FuncionId
			 LEFT JOIN (SELECT FuncionId, Funcion, 'X' AS Puesto FROM Funciones WHERE FuncionId IN ($Puesto 0)) AS T4 ON T4.FuncionId=T0.FuncionId
			 WHERE T0.FuncionId IN ($Subordinado $Trabajador $Jefe 0)
			 ORDER BY T0.Funcion ASC
			 ";
		$R0=$this->Consulta($Q0);
		$Cadena='<table>
					<thead>
						<tr>
							<th>Funcion</th>
							<th>Subordinado</th>										
							<th>Trabajador</th>
							<th>Jefe</th>
							<th>Funcion Puesto</th>
						</tr>
					</thead>
					<tbody>';
		$t=true;
		while($A0=mysql_fetch_row($R0))
		{

			if($t)
				$Clase='';
			else
				$Clase='class="alt"';

				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td align="center">'.utf8_decode($A0[1]).'</td>
							<td align="center">'.utf8_decode($A0[2]).'</td>
							<td align="center">'.utf8_decode($A0[3]).'</td>							
							<td align="center">'.utf8_decode($A0[4]).'</td>							
						</tr>
				';		
			$t=(!$t);
		}
								
		$Cadena.='</tbody>
				</table>';
		return $Cadena;
	}

	function getFunciones()
	{
		
		$Cadena='<table id="Funciones" >
					<thead>
					<tr><td colspan="3">Buscar:&nbsp<input id="Busqueda" type="text"></td>
						<td><input type="button" class="seleccionar" id="seleccionar" name="seleccionar"></td>
					</tr>
						<tr>						
							<th>Funcion</th>
							<th>Subordinado</th>										
							<th>Trabajador</th>
							<th>Jefe</th>
							<th>Funcion Puesto</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT FuncionId, Funcion FROM Funciones ORDER BY Funcion ASC";
		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[1]).'</td>
							<td align="center"><input type="checkbox" name="Subordinado" id="Subordinado" class="sub" value="'.$A0[0].'" onclick="setFuncion(this)" /></td>
							<td align="center"><input type="checkbox" name="Trabajador" id="Trabajador" class="Tr" value="'.$A0[0].'" onclick="setFuncion(this)" /></td>
							<td align="center"><input type="checkbox" name="Jefe" id="Jefe" class="Jf" value="'.$A0[0].'" onclick="setFuncion(this)"/></td>							
							<td align="center"><input type="checkbox" name="Puesto" id="Puesto" class="Pt" value="'.$A0[0].'" onclick="setFuncion(this)"/></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}

	function getDependencias()
	{
		$Q0="SELECT DependenciaId, Dependencia FROM Dependencias ORDER BY Dependencia";
		return $this->Consulta($Q0);
	}

	function getCategorias()
	{
		$Q0="SELECT CategoriaId, Categoria FROM Categorias ORDER BY Categoria";
		return $this->Consulta($Q0);
	}

	function addCaptura($TrabajadorId, $Folio, $Subordinados, $CategoriaId, $GradoAcademicoCategoriaId, 
						$ExperienciaRequeridaCategoria, $AreaTrabajoId, $PuestoId, $GradoAcademicoPuestoId, 
						$ExperienciaRequeridaPuesto, $JefeId, $GradoAcademicoActualId, $Coincide, $Competencias, 
						$Subordinado, $Trabajador, $Jefe, $FPuesto, $HoraInicio, $HoraFin, $equipo)
	{
		$var=explode(",", $Competencias);

		$PersonalId=$this->getPersonalId($TrabajadorId);
		$PersonalJefeId=$this->getPersonalId($JefeId);
		if($PersonalId==0 || $PersonalJefeId==0)
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');
		if($this->ExsisteCaptura($PersonalId))
			return utf8_decode('<span class="alerta">Â¡Ya existe registro de esta Persona!</span>');

		if(!isset($Coincide))
			$Coincide=0;
		
		$Q0="INSERT INTO Consolidado
						(CapturaId, Folio, PersonalId, UsuarioId, Fecha, Hora, CategoriaId, AreaTrabajoId, PuestoId, 
							Subordinados, JefeId, GradoAcademicoCategoriaId, GradoAcademicoPuestoId, Coincidencia, 
							GradoAcademicoId, ExperienciaCategoria, ExperienciaPuesto, HoraInicio, HoraFin)
				  VALUES(NULL, UCASE('$Folio'), $PersonalId, $this->UsuarioId, CURDATE(), CURTIME(), $CategoriaId, 
				  	$AreaTrabajoId, $PuestoId, $Subordinados, $PersonalJefeId, $GradoAcademicoCategoriaId, 
				  	$GradoAcademicoPuestoId, $Coincide, $GradoAcademicoActualId, $ExperienciaRequeridaCategoria, 
				  	$ExperienciaRequeridaPuesto, '$HoraInicio:00', '$HoraFin:00')";
		
		$Q1="INSERT IGNORE INTO  FuncionesPersonal
			 SELECT $PersonalId, FuncionId, 0,0,0,0 FROM Funciones WHERE FuncionId IN ($Subordinado $Trabajador $Jefe 0)";

		$Q3="UPDATE FuncionesPersonal SET Subordinado=1 WHERE PersonalId=$PersonalId AND FuncionId IN ($Subordinado 0)";
		$Q4="UPDATE FuncionesPersonal SET Trabajador=1 WHERE PersonalId=$PersonalId AND FuncionId IN ($Trabajador 0)";
		$Q5="UPDATE FuncionesPersonal SET Jefe=1 WHERE PersonalId=$PersonalId AND FuncionId IN ($Jefe 0)";
		$Q6="UPDATE FuncionesPersonal SET Puesto=1 WHERE PersonalId=$PersonalId AND FuncionId IN ($FPuesto 0)";

		$this->StartTransaccion();

		if($this->Consulta($Q0) & $this->Consulta($Q1) & $this->Consulta($Q3) & $this->Consulta($Q4) & $this->Consulta($Q5) & $this->Consulta($Q6))

		foreach ($var as $value) 
		{
			$v1=explode("|", $value);
			if ($v1[0]!=0)
			$Q2="INSERT IGNORE INTO PersonalCompetencias (PersonalId, CompetenciaId, GradoCompetenciaId) VALUES($PersonalId, $v1[0], $v1[1])";
			if(!$this->Consulta($Q2))
			{
				$this->CancelaTransaccion();
				return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');
			}
		}
		$this->addBitacora(26, 2, '', $equipo);	
		$this->AceptaTransaccion();

		return utf8_decode('<span class="notificacion">Â¡Los datos se guardaron correctamente!</span>');
	}

	function ExsisteCaptura($PersonalId)
	{
		$Q0="SELECT COUNT(CapturaId) AS Cta FROM Consolidado WHERE PersonalId=$PersonalId";
		list($Cta)=mysql_fetch_row($this->Consulta($Q0));
		if($Cta>0)
		return true;
		return false;		
	}

	function getPersonalId($Clave)
	{

		$Q0="SELECT PersonalId FROM Personal WHERE Clave='$Clave'";
		list($PersonalId)=mysql_fetch_row($this->Consulta($Q0));
		if(!isset($PersonalId) || $PersonalId=='')
		$PersonalId=0;
		return $PersonalId;
	}	

	function getNombrePersonal($Clave)
	{

		$Q0="SELECT CONCAT_WS(' ',Nombre, Paterno, Materno) AS Nombre FROM Personal WHERE Clave='$Clave'";
		list($Nombre)=mysql_fetch_row($this->Consulta($Q0));
		if(!isset($Nombre) || $Nombre=='')
		$Nombre=utf8_decode('<span class="alerta">Â¡No encontro informacion con esa clave!</span>');
		return $Nombre;
	}

//:: Areas Trabajo :::::::::::::::::::::::::::::::::::::::::::::::::::::::::://
	function addAreaTrabajo($AreaTrabajo, $Dependencias, $Equipo)
	{
		$Q0="INSERT INTO AreasTrabajo (AreaTrabajoId, AreaTrabajo) VALUES(NULL, UCASE('$AreaTrabajo'))";
		$Q1="INSERT IGNORE INTO AreasDependencias
			 SELECT LAST_INSERT_ID(), DependenciaId FROM Dependencias WHERE DependenciaId IN ($Dependencias 0)";
		if($this->Consulta($Q0) & $this->Consulta($Q1))
		{
			$this->addBitacora(28, 2, '', $Equipo);
			return utf8_decode('<span class="notificacion">Â¡El Area de Trabajo se guardo correctamente!</span>');
		}
		else
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');

	}

//:: Funciones :::::::::::::::::::::::::::::::::::::::::::::::::::::::::://
	function addFuncion($Funcion, $Categorias, $Equipo)
	{
		$Q0="INSERT INTO Funciones (FuncionId, Funcion) VALUES(NULL, UCASE('$Funcion'))";
		$Q1="INSERT IGNORE INTO CategoriasFunciones 
			 SELECT CategoriaId, LAST_INSERT_ID() FROM Categorias WHERE CategoriaId IN ($Categorias 0)";
		if($this->Consulta($Q0) & $this->Consulta($Q1))
		{
			$this->addBitacora(28, 2, '', $Equipo);
			return utf8_decode('<span class="notificacion">Â¡La Funcion se guardo correctamente!</span>');
		}
		else
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');

	}

//:: Puestos :::::::::::::::::::::::::::::::::::::::::::::::::::::::::://
	function addPuesto($Puesto, $Experiencia, $GradoAcademicoId, $Equipo)
	{
		$Q0="INSERT INTO Puestos
			(PuestoId, Puesto, ExperienciaRequerida, GradoAcademicoId)
			VALUES(NULL, UCASE('$Puesto'), $Experiencia, $GradoAcademicoId)";
		if($this->Consulta($Q0))
		{
			$this->addBitacora(10, 2, '', $Equipo);
			return utf8_decode('<span class="notificacion">Â¡El Puesto se guardo correctamente!</span>');
		}
		else
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');

	}

//:: Bitacora :::::::::::::::::::::::::::::::::::::::::::::::::::::::::://










	
	//// SUCURSALES ////
	function getSucursales()
	{
		$Q0="SELECT ' #Sucursal', 'Sucursal', 'Calle', 'Codigo Postal&nbsp;&nbsp;', 'Colonia', 'Telefono 1', 'Telefono 2', 'Correo', 'Web', 'RFC', 'Matriz ', 'Activo '
				UNION
				SELECT T1.SucursalId, T1.Sucursal, T1.Calle, T2.CodigoPostal, T2.Colonia, T1.Telefono1, T1.Telefono2, T1.Correo, T1.Web, T1.RFC, IF(T1.Matriz=1,'MATRIZ',''), IF(T1.Activo=1,'ACTIVO','INACTIVO')
				FROM Sucursales AS T1
				LEFT JOIN CodigosPostales AS T2 ON T2.CodigoPostalId=T1.CodigoPostalId
				";
		return $this->Consulta($Q0);
	}//getSucursales

	function getSucursal($SucursalId)
	{
		$Q0="SELECT Sucursal, Calle, CodigoPostal, T1.CodigoPostalId, Telefono1, Telefono2, Correo, Web, RFC, Matriz
			FROM Sucursales AS T1
			LEFT JOIN CodigosPostales AS T2 ON T2.CodigoPostalId=T1.CodigoPostalId
			WHERE SucursalId IN ($SucursalId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}

	function getBuscaSucursales($Sucursal, $Rfc, $Calle, $Telefono1, $Telefono2, $CodigoPostal, $Colonia, $Correo, $Web, $Matriz, $Activo)
	{
		if($Matriz==2)
			$FMatriz='0,1';
		else
			$FMatriz=$Matriz;
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT ' #Sucursal', 'Sucursal', 'Calle', 'Codigo Postal&nbsp;&nbsp;', 'Colonia', 'Telefono 1', 'Telefono 2', 'Correo', 'Web', 'RFC', 'Matriz ', 'Activo '
				UNION
				SELECT T1.SucursalId, T1.Sucursal, T1.Calle, T2.CodigoPostal, T2.Colonia, T1.Telefono1, T1.Telefono2, T1.Correo, T1.Web, T1.RFC, IF(T1.Matriz=1,'MATRIZ',''), IF(T1.Activo=1,'ACTIVO','INACTIVO')
				FROM Sucursales AS T1
				LEFT JOIN CodigosPostales AS T2 ON T2.CodigoPostalId=T1.CodigoPostalId
				WHERE T1.Sucursal LIKE '%$Sucursal%'
				AND T1.Calle LIKE '%$Calle%'				
				AND T2.CodigoPostal LIKE '%$CodigoPostal%'
				AND T2.Colonia LIKE '%$Colonia%'
				AND T1.Telefono1 LIKE '%$Telefono1%'
				AND T1.Telefono2 LIKE '%$Telefono2%'
				AND T1.Correo LIKE '%$Correo%'
				AND T1.Web LIKE '%$Web%'
				AND T1.RFC LIKE '%$Rfc%'
				AND T1.Matriz IN ($FMatriz)
				AND T1.Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaSucursales

	function addSucursal($Sucursal, $Calle, $CodigoPostalId, $Telefono1, $Telefono2, $Correo, $Web, $RFC, $Matriz)
	{
		$Q0="INSERT INTO Sucursales (SucursalId, Sucursal, Calle, CodigoPostalId, Telefono1, Telefono2, Correo, Web, RFC, Matriz, Activo)
			 VALUES(NULL, UCASE('$Sucursal'), UCASE('$Calle'), $CodigoPostalId, '$Telefono1', '$Telefono2', '$Correo', LCASE('$Web'), UCASE('$RFC'), $Matriz, 1)";
		$this->Insertar($Q0);
	}//addSucursal

	function deleteSucursal($llaves)
	{
		$Q0="UPDATE Sucursales SET Activo=0 WHERE SucursalId IN ($llaves 0)";
		$this->Consulta($Q0);
	}	

	function activaSucursal($llaves)
	{
		$Q0="UPDATE Sucursales SET Activo=1 WHERE SucursalId IN ($llaves 0)";
		$this->Consulta($Q0);
	}	
	
	function updateSucursal($SucursalId, $Sucursal, $Calle, $CodigoPostalId, $Telefono1, $Telefono2, $Correo, $Web, $RFC, $Matriz)
	{
		$Q0="UPDATE Sucursales
			 SET 	Sucursal='$Sucursal', 
			 		Calle='$Calle', 
			 		CodigoPostalId=$CodigoPostalId, 
			 		Telefono1='$Telefono1', 
			 		Telefono2='$Telefono2',  
			 		Correo='$Correo', 
			 		Web='$Web', 
			 		RFC=UCASE('$RFC'), 
			 		Matriz=$Matriz
			 WHERE SucursalId =REPLACE('$SucursalId', ',', '')";
		$this->Consulta($Q0);
	}//addSucursal

//// PUESTOS ////
	function getPuestos()
	{
		$Q0="SELECT '#Puesto', 'Puesto', 'Descripcion', 'Activo'
				UNION
				SELECT PuestoId, Puesto, PuestoTxt, Activo 
				FROM Puestos
				";
		return $this->Consulta($Q0);
	}//getPuestos	

	function getPuesto($PuestoId)
	{
		$Q0="SELECT Puesto, PuestoTxt
			FROM Puestos AS T1
			WHERE PuestoId IN ($PuestoId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}

	function getBuscaPuestos($Puesto, $Descripcion, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT '#Puesto', 'Puesto', 'Descripcion', 'Activo'
				UNION
				SELECT PuestoId, Puesto, PuestoTxt, Activo 
				FROM Puestos
				WHERE Puesto LIKE '%$Puesto%'
				AND PuestoTxt LIKE '%$Descripcion%'
				AND Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaPuestos

	function addPuestox($Puesto, $PuestoTxt)
	{
		$Q0="INSERT INTO Puestos (PuestoId, Puesto, PuestoTxt, Activo)
			 VALUES(NULL, UCASE('$Puesto'), UCASE('$PuestoTxt'), 1)";
		$this->Insertar($Q0);
	}//addPuesto

	function deletePuesto($llaves)
	{
		$Q0="UPDATE Puestos SET Activo=0 WHERE PuestoId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deletePuesto

	function activaPuesto($llaves)
	{
		$Q0="UPDATE Puestos SET Activo=1 WHERE PuestoId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaPuesto
	
	function updatePuesto($PuestoId, $Puesto, $PuestoTxt)
	{
		$Q0="UPDATE Puestos
			 SET 	Puesto='$Puesto', 
			 		PuestoTxt='$PuestoTxt'
			 WHERE PuestoId =REPLACE('$PuestoId', ',', '')";
		$this->Consulta($Q0);
	}//updatePuesto

//// ESTATUS ////
	function getEstatus()
	{
		$Q0="SELECT '#Estatus', 'Estatus', 'Descripcion', 'Activo'
				UNION
				SELECT EstatusId, Estatus, EstatusTxt, Activo 
				FROM Estatus
				";
		return $this->Consulta($Q0);
	}//getEstatus	

	function getEstatu($EstatusId)
	{
		$Q0="SELECT Estatus, EstatusTxt
			FROM Estatus AS T1
			WHERE EstatusId IN ($EstatusId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}

	function getBuscaEstatus($Estatus, $Descripcion, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT '#Estatus', 'Estatus', 'Descripcion', 'Activo'
				UNION
				SELECT EstatusId, Estatus, EstatusTxt, Activo 
				FROM Estatus
				WHERE Estatus LIKE '%$Estatus%'
				AND EstatusTxt LIKE '%$Descripcion%'
				AND Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaEstatus

	function addEstatus($Estatus, $EstatusTxt)
	{
		$Q0="INSERT INTO Estatus (EstatusId, Estatus, EstatusTxt, Activo)
			 VALUES(NULL, UCASE('$Estatus'), UCASE('$EstatusTxt'), 1)";
		$this->Insertar($Q0);
	}//addEstatus

	function deleteEstatus($llaves)
	{
		$Q0="UPDATE Estatus SET Activo=0 WHERE EstatusId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteEstatus

	function activaEstatus($llaves)
	{
		$Q0="UPDATE Estatus SET Activo=1 WHERE EstatusId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaEstatus
	
	function updateEstatus($EstatusId, $Estatus, $EstatusTxt)
	{
		$Q0="UPDATE Estatus
			 SET 	Estatus='$Estatus', 
			 		EstatusTxt='$EstatusTxt'
			 WHERE EstatusId =REPLACE('$EstatusId', ',', '')";
		$this->Consulta($Q0);
	}//updateEstatus


//// LOCALIDADES ////

	function getMunicipios()
	{
		$Q0="SELECT '#Municipio', 'Estado', 'Municipio', 'Codigos Postales', 'Activo' 
			UNION
			SELECT MunicipioId, Estado, Municipio, CONCAT('<span onclick=\"sendFoo(',MunicipioId,');\" class=\"Mano\">Ver Codigos </span>'), T1.Activo FROM Municipios AS T1
			LEFT JOIN Estados AS T2 ON T2.EstadoId=T1.EstadoId limit 15
			";
		return $this->Consulta($Q0);
	}//getMunicipios

	function getMunicipio($MunicipioId)
	{
		$Q0="SELECT Municipio, EstadoId
			FROM Municipios AS T1
			WHERE MunicipioId IN ($MunicipioId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}

	function getBuscaMunicipios($Municipio, $EstadoId, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Filtro="";
		if($EstadoId!=0)
			$Filtro="AND T1.EstadoId = $EstadoId";

		$Q0="SELECT '#Municipio', 'Estado', 'Municipio', 'Activo' 
			UNION
			SELECT MunicipioId, Estado, Municipio, T1.Activo FROM Municipios AS T1
			LEFT JOIN Estados AS T2 ON T2.EstadoId=T1.EstadoId
			WHERE Municipio LIKE '%$Municipio%'
			$Filtro
			AND T1.Activo IN ($FActivo)
			";				
		return $this->Consulta($Q0);
	}//getBuscaMunicipios


	function addMunicipio($Municipio, $EstadoId)
	{
		$Q0="INSERT INTO Municipios (MunicipioId, Municipio, EstadoId, Activo)
			 VALUES(NULL, UCASE('$Municipio'), $EstadoId, 1)";
		$this->Insertar($Q0);
	}//addMunicipio

	function deleteMunicipio($llaves)
	{
		$Q0="UPDATE Municipios SET Activo=0 WHERE MunicipioId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteMunicipio

	function activaMunicipio($llaves)
	{
		$Q0="UPDATE Municipios SET Activo=1 WHERE MunicipioId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaMunicipio
	
	function updateMunicipio($MunicipioId, $Municipio, $EstadoId)
	{
		$Q0="UPDATE Municipios
			 SET 	Municipio='$Municipio', 
			 		EstadoId=$EstadoId
			 WHERE MunicipioId =REPLACE('$MunicipioId', ',', '')";
		$this->Consulta($Q0);
	}//updateMunicipio

	//// CODIGOS POSTALES ////

	function getMunicipioById($MunicipioId)
	{
		$Q0="SELECT Municipio FROM Municipios WHERE MunicipioId = $MunicipioId LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}



	function getCodigos($MunicipioId)
	{
		$Q0="SELECT '#Codigo Postal Id', 'Codigo Postal', 'Colonia', 'Activo' 
			UNION
			SELECT CodigoPostalId, CodigoPostal, Colonia, Activo 
			FROM CodigosPostales
			WHERE MunicipioId=$MunicipioId";
		return $this->Consulta($Q0);
	}//getCodigos

	function getCodigo($CodigoPostalId)
	{
		$Q0="SELECT CodigoPostal, MunicipioId
			FROM CodigosPostales AS T1
			WHERE CodigoPostalId IN ($CodigoPostalId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getCodigo

	function getBuscaCodigos($Municipio, $EstadoId, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Filtro="";
		if($EstadoId!=0)
			$Filtro="AND T1.EstadoId = $EstadoId";

		$Q0="SELECT '#Municipio', 'Estado', 'Municipio', 'Activo' 
			UNION
			SELECT MunicipioId, Estado, Municipio, T1.Activo FROM Municipios AS T1
			LEFT JOIN Estados AS T2 ON T2.EstadoId=T1.EstadoId
			WHERE Municipio LIKE '%$Municipio%'
			$Filtro
			AND T1.Activo IN ($FActivo)
			";				
		return $this->Consulta($Q0);
	}//getBuscaCodigos


	function addCodigo($Municipio, $EstadoId)
	{
		$Q0="INSERT INTO Municipios (MunicipioId, Municipio, EstadoId, Activo)
			 VALUES(NULL, UCASE('$Municipio'), $EstadoId, 1)";
		$this->Insertar($Q0);
	}//addCodigo

	function deleteCodigo($llaves)
	{
		$Q0="UPDATE Municipios SET Activo=0 WHERE MunicipioId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteCodigo

	function activaCodigo($llaves)
	{
		$Q0="UPDATE Municipios SET Activo=1 WHERE MunicipioId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaCodigo
	
	function updateCodigo($MunicipioId, $Municipio, $EstadoId)
	{
		$Q0="UPDATE Municipios
			 SET 	Municipio='$Municipio', 
			 		EstadoId=$EstadoId
			 WHERE MunicipioId =REPLACE('$MunicipioId', ',', '')";
		$this->Consulta($Q0);
	}//updateCodigo


	//// ESTADO CIVIL ////
	function getEstadoCiviles()
	{
		$Q0="SELECT '#Estado Civil', 'Estado Civil', 'Activo'
				UNION
				SELECT EstadoCivilId, EstadoCivil, Activo 
				FROM EstadoCivil
				";
		return $this->Consulta($Q0);
	}//getEstadoCiviles	

	function getEstadoCivil($EstadoCivilId)
	{
		$Q0="SELECT EstadoCivil
			FROM EstadoCivil AS T1
			WHERE EstadoCivilId IN ($EstadoCivilId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getEstadoCivil

	function getBuscaEstadoCiviles($EstadoCivil, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT '#Estado Civil', 'EstadoCivil', 'Activo'
				UNION
				SELECT EstadoCivilId, EstadoCivil, Activo 
				FROM EstadoCivil
				WHERE EstadoCivil LIKE '%$EstadoCivil%'				
				AND Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaEstadoCivil

	function addEstadoCivil($EstadoCivil)
	{
		$Q0="INSERT INTO EstadoCivil (EstadoCivilId, EstadoCivil, Activo)
			 VALUES(NULL, UCASE('$EstadoCivil'), 1)";
		$this->Insertar($Q0);
	}//addEstadoCivil

	function deleteEstadoCivil($llaves)
	{
		$Q0="UPDATE EstadoCivil SET Activo=0 WHERE EstadoCivilId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteEstadoCivil

	function activaEstadoCivil($llaves)
	{
		$Q0="UPDATE EstadoCivil SET Activo=1 WHERE EstadoCivilId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaEstadoCivil
	
	function updateEstadoCivil($EstadoCivilId, $EstadoCivil)
	{
		$Q0="UPDATE EstadoCivil
			 SET 	EstadoCivil='$EstadoCivil'			 		
			 WHERE EstadoCivilId =REPLACE('$EstadoCivilId', ',', '')";
		$this->Consulta($Q0);
	}//updateEstadoCivil

//// ESCOLARIDAD ////
	function getEscolaridades()
	{
		$Q0="SELECT '#Escolaridad', 'Escolaridad', 'Activo'
				UNION
				SELECT EscolaridadId, Escolaridad, Activo 
				FROM Escolaridades
				";
		return $this->Consulta($Q0);
	}//getEscolaridades	

	function getEscolaridad($EscolaridadId)
	{
		$Q0="SELECT Escolaridad
			FROM Escolaridades AS T1
			WHERE EscolaridadId IN ($EscolaridadId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getEscolaridad

	function getBuscaEscolaridades($Escolaridad, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT '#Escolaridad', 'Escolaridad', 'Activo'
				UNION
				SELECT EscolaridadId, Escolaridad, Activo 
				FROM Escolaridades
				WHERE Escolaridad LIKE '%$Escolaridad%'				
				AND Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaEscolaridades

	function addEscolaridad($Escolaridad)
	{
		$Q0="INSERT INTO Escolaridades (EscolaridadId, Escolaridad, Activo)
			 VALUES(NULL, UCASE('$Escolaridad'), 1)";
		$this->Insertar($Q0);
	}//addEscolaridad

	function deleteEscolaridad($llaves)
	{
		$Q0="UPDATE Escolaridades SET Activo=0 WHERE EscolaridadId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteEscolaridad

	function activaEscolaridad($llaves)
	{
		$Q0="UPDATE Escolaridades SET Activo=1 WHERE EscolaridadId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaEscolaridad
	
	function updateEscolaridad($EscolaridadId, $Escolaridad)
	{
		$Q0="UPDATE Escolaridades
			 SET 	Escolaridad='$Escolaridad'			 		
			 WHERE EscolaridadId =REPLACE('$EscolaridadId', ',', '')";
		$this->Consulta($Q0);
	}//updateEscolaridad



//// CLASE ARTICULOS ////
	function getClasesArticulos()
	{
		$Q0="SELECT '#Clase Articulo', 'Clase Articulo', 'Descripcion', 'Unidad de Medida', 'Activo'
				UNION
				SELECT ClaseArticuloId, ClaseArticulo, ClaseArticuloTxt, UnidadMedida, T1.Activo
				FROM ClaseArticulos AS T1
				LEFT JOIN UnidadesMedida AS T2 ON T2.UnidadMedidaId=T1.UnidadMedidaId
				";
		return $this->Consulta($Q0);
	}//getClasesArticulos	

	function getClaseArticulo($ClaseArticuloId)
	{
		$Q0="SELECT ClaseArticulo, ClaseArticuloTxt, UnidadMedidaId
			FROM ClaseArticulos AS T1
			WHERE ClaseArticuloId IN ($ClaseArticuloId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getClaseArticulo

	function getBuscaClasesArticulos($ClaseArticulo, $Descripcion, $UnidadMedidaId, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Filtro="";
		if($UnidadMedidaId!=0)
			$Filtro="AND T1.UnidadMedidaId = $UnidadMedidaId";

		$Q0="SELECT '#Clase Articulo', 'Clase Articulo', 'Descripcion', 'Unidad de Medida', 'Activo'
				UNION
				SELECT ClaseArticuloId, ClaseArticulo, ClaseArticuloTxt, UnidadMedida, T1.Activo
				FROM ClaseArticulos AS T1
				LEFT JOIN UnidadesMedida AS T2 ON T2.UnidadMedidaId=T1.UnidadMedidaId
				WHERE ClaseArticulo LIKE '%$ClaseArticulo%'		
				AND ClaseArticuloTxt LIKE '%$Descripcion%'
				$Filtro 
				AND T1.Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaClasesArticulos

	function addClaseArticulo($ClaseArticulo, $Descripcion, $UnidadMedidaId)
	{
		$Q0="INSERT INTO ClaseArticulos (ClaseArticuloId, ClaseArticulo, ClaseArticuloTxt, UnidadMedidaId, Activo)
			 VALUES(NULL, UCASE('$ClaseArticulo'), UCASE('$Descripcion'), $UnidadMedidaId, 1)";
		$this->Insertar($Q0);
	}//addClaseArticulo

	function deleteClaseArticulo($llaves)
	{
		$Q0="UPDATE ClaseArticulos SET Activo=0 WHERE ClaseArticuloId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteClaseArticulo

	function activaClaseArticulo($llaves)
	{
		$Q0="UPDATE ClaseArticulos SET Activo=1 WHERE ClaseArticuloId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaClaseArticulo
	
	function updateClaseArticulo($ClaseArticuloId, $ClaseArticulo, $Descripcion, $UnidadMedidaId)
	{
		$Q0="UPDATE ClaseArticulos
			 SET 	ClaseArticulo=UCASE('$ClaseArticulo'),
			 		ClaseArticuloTxt=UCASE('$Descripcion'),
			 		UnidadMedidaId=$UnidadMedidaId
			 WHERE ClaseArticuloId =REPLACE('$ClaseArticuloId', ',', '')";
		$this->Consulta($Q0);
	}//updateClaseArticulo


//// PRODUCTOS ////
	function getProductos()
	{
		$Q0="SELECT '#Producto', 'Producto', 'Descripcion', 'Costo', 'Precio', 'Utilidad', 'Activo'
				UNION
				SELECT T1.ProductoId, Producto, ProductoTxt, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, CONCAT('$ ',FORMAT(Precio,2)) AS Precio, CONCAT(ROUND((1- Costo/Precio)*100,2),' %') AS Utilidad, Activo
				FROM Productos AS T1
				LEFT JOIN HistorialProductos AS T2 ON T2.ProductoId=T1.ProductoId
				WHERE Baja='0000-00-00'
			";
		return $this->Consulta($Q0);
	}//getProductos	

	function getProducto($ProductoId)
	{
		$Q0="SELECT Producto, ProductoTxt, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, CONCAT('$ ',FORMAT(Precio,2)) AS Precio
				FROM Productos AS T1
				LEFT JOIN HistorialProductos AS T2 ON T2.ProductoId=T1.ProductoId
				WHERE Baja='0000-00-00' AND T1.ProductoId IN ($ProductoId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getProducto

	function getBuscaProductos($Producto, $Descripcion, $Costo, $Precio, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

	
		$Q0="SELECT '#Producto', 'Producto', 'Descripcion', 'Costo', 'Precio', 'Utilidad', 'Activo'
				UNION
				SELECT T1.ProductoId, Producto, ProductoTxt, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, CONCAT('$ ',FORMAT(Precio,2)) AS Precio, CONCAT(ROUND((1- Costo/Precio)*100,2),' %') AS Utilidad, Activo
				FROM Productos AS T1
				LEFT JOIN HistorialProductos AS T2 ON T2.ProductoId=T1.ProductoId
				WHERE Baja='0000-00-00'
				AND Producto LIKE '%$Producto%'		
				AND ProductoTxt LIKE '%$Descripcion%'
				AND Costo LIKE '%$Costo%'
				AND Precio LIKE '%$Precio%'
				AND T1.Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaProductos	

	function addProducto($Producto, $Descripcion, $Costo, $Precio)
	{
		$Q0="INSERT INTO Productos (ProductoId, Producto, ProductoTxt, Activo)
                  VALUES(NULL, UCASE('$Producto'), '$Descripcion', 1)";
        $Q1="INSERT INTO HistorialProductos (HistorialProductoId, ProductoId, Precio, Costo, Alta, Baja)
                  VALUES(NULL, LAST_INSERT_ID(), REPLACE('$Precio', '$', ''), REPLACE('$Costo', '$', ''), CURDATE(), '0000-00-00')";

        $this->StartTransaccion();
        	if($this->Consulta($Q0))
        		if($this->Consulta($Q1))
        		{
        			$this->AceptaTransaccion();
        			return true;
        		}
  		$this->CancelaTransaccion();
        return false;
		
	}//addProducto

	function deleteProducto($llaves)
	{
		$Q0="UPDATE Productos SET Activo=0 WHERE ProductoId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteProducto

	function activaProducto($llaves)
	{
		$Q0="UPDATE Productos SET Activo=1 WHERE ProductoId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaProducto
	
	function updateProducto($ProductoId, $Producto, $Descripcion, $Costo, $Precio)
	{
		$Q0="UPDATE Productos SET Producto=UCASE('$Producto'), ProductoTxt='$Descripcion' WHERE ProductoId=REPLACE('$ProductoId', ',', '')";
		$Q1="UPDATE HistorialProductos SET Baja=CURDATE() WHERE ProductoId=REPLACE('$ProductoId', ',', '') AND Baja='0000-00-00'";
		$Q2="INSERT INTO HistorialProductos (HistorialProductoId, ProductoId, Precio, Costo, Alta, Baja)		
                  VALUES(NULL, REPLACE('$ProductoId', ',', ''),  REPLACE('$Precio', '$', ''), REPLACE('$Costo', '$', ''), CURDATE(), '0000-00-00')";

        $this->StartTransaccion();
        if($this->Consulta($Q0))
        	if($this->Consulta($Q1))
        		if($this->Consulta($Q2))
        		{
        			$this->AceptaTransaccion();
        			return true;
        		}
        $this->CancelaTransaccion();
        return false;
	}//updateProducto


	//// PAQUETES ////
	function getPaquetes()
	{
		$Q0="SELECT '#Paquete', 'Paquete', 'Descripcion',  'Precio', 'Activo'
				UNION
				SELECT PaqueteId, Paquete, PaqueteTxt, CONCAT('$ ',FORMAT(Precio,2)) AS Precio, Activo
				FROM Paquetes
			";
		return $this->Consulta($Q0);
	}//getPaquetes	

	function getProductosPaquetes()
	{
		$Q0="SELECT '#Producto', 'Cantidad', 'Producto', 'Descripcion', 'Costo', 'Precio'
				UNION
				SELECT T1.ProductoId, 0, Producto, ProductoTxt, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, CONCAT('$ ',FORMAT(Precio,2)) AS Precio
				FROM Productos AS T1
				LEFT JOIN HistorialProductos AS T2 ON T2.ProductoId=T1.ProductoId
				WHERE Baja='0000-00-00' AND T1.Activo=1
			";
		return $this->Consulta($Q0);
	}


	function getProductosPaquetesEdit($PaqueteId)
	{
		$Q0="SELECT '#Producto', 'Cantidad', 'Producto', 'Descripcion', 'Costo', 'Precio'
				UNION
				SELECT T1.ProductoId, IFNULL(T3.Cantidad,0) AS Cantidad, Producto, ProductoTxt, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, CONCAT('$ ',FORMAT(Precio,2)) AS Precio
				FROM Productos AS T1
				LEFT JOIN HistorialProductos AS T2 ON T2.ProductoId=T1.ProductoId
        		LEFT JOIN PaquetesProductos AS T3 ON T3.ProductoId=T1.ProductoId AND T3.PaqueteId IN ($PaqueteId 0)
				WHERE Baja='0000-00-00' AND T1.Activo=1
				";
		return $this->Consulta($Q0);
	}

	function getPaquete($PaqueteId)
	{
		$Q0="SELECT Paquete, PaqueteTxt, CONCAT('$ ',FORMAT(Precio,2)) AS Precio
				FROM Paquetes
				WHERE PaqueteId in ($PaqueteId 0)
			";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getPaquete

	function getBuscaPaquetes($Paquete, $Descripcion, $Precio, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT '#Paquete', 'Paquete', 'Descripcion',  'Precio', 'Activo'
				UNION
				SELECT PaqueteId, Paquete, PaqueteTxt, CONCAT('$ ',FORMAT(Precio,2)) AS Precio, Activo
				FROM Paquetes
				WHERE Paquete LIKE '%$Paquete%'				
				AND PaqueteTxt LIKE '%$Descripcion%'				
				AND Precio LIKE '%$Precio%'
				AND Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaProductos	

	function addPaquete($Paquete, $Descripcion, $Productos, $Precio)
	{		
		$flag=true;
		$Q0="INSERT INTO Paquetes (PaqueteId, Paquete, PaqueteTxt, Precio, Activo)
                  VALUES(NULL, UCASE('$Paquete'), '$Descripcion', $Precio, 1)";
        
       
        $this->StartTransaccion();	
        	if($this->Consulta($Q0))
        	{
       		 $IdPaquete=mysql_insert_id();       		 
		        if($IdPaquete>0)
		        {
					foreach ($Productos as $key => $Producto) 
					{ 						
						if($Producto>0)
						{
							
					        $Q1="INSERT INTO PaquetesProductos (PaqueteId, ProductoId, Cantidad)       
					                  VALUES('$IdPaquete', $key, $Producto)";
					                  

							if(!$this->Consulta($Q1))
							{
								$flag=false;
								break;
							}
						}
					}
				}else
					$this->CancelaTransaccion();
			}else
				$this->CancelaTransaccion();

			if($flag)
       			$this->AceptaTransaccion();
       		else
       			$this->CancelaTransaccion();
	}//addPaquete


	

	function deletePaquete($llaves)
	{
		$Q0="UPDATE Paquetes SET Activo=0 WHERE PaqueteId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteProducto

	function activaPaquete($llaves)
	{
		$Q0="UPDATE Paquetes SET Activo=1 WHERE PaqueteId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaProducto
	
	function updatePaquete($PaqueteId, $Paquete, $Descripcion, $Precio, $Productos)
	{


		$flag=true;
		$Q0="UPDATE 
					Paquetes 
			SET Paquete=UCASE('$Paquete'),  
				Precio=REPLACE('$Precio', '$', ''), 
				PaqueteTxt='$Descripcion' 
			WHERE PaqueteId='$PaqueteId'";
        $Q1="DELETE FROM PaquetesProductos WHERE PaqueteId='$PaqueteId'";
       
        $this->StartTransaccion();	
        	if($this->Consulta($Q0))
        	{
        		if($this->Consulta($Q1))

		        {
					foreach ($Productos as $key => $Producto) 
					{ 						
						if($Producto>0)
						{
							
					        $Q1="INSERT INTO PaquetesProductos (PaqueteId, ProductoId, Cantidad)       
					                  VALUES('$PaqueteId', $key, $Producto)";
					                  

							if(!$this->Consulta($Q1))
							{
								$flag=false;
								break;
							}
						}
					}
				}else
					$this->CancelaTransaccion();
			}else
				$this->CancelaTransaccion();

			if($flag)
       			$this->AceptaTransaccion();
       		else
       			$this->CancelaTransaccion();

	}//updateProducto

/////// PROMOCIONES ////////

	function getPromociones()
	{
		$Q0="SELECT '#Promocion', 'Promocion', 'Descripcion', 'Activo&nbsp&nbsp'
				UNION
				SELECT PromocionId, Promocion, PromocionTXT, Activo 
				FROM Promociones				
				";
		return $this->Consulta($Q0);
	}//getPromociones


//// Tipo Ajustes ////
	function getTipoAjustes()
	{
		$Q0="SELECT '#TipoAjuste', 'TipoAjuste', 'Descripcion', 'Activo'
				UNION
				SELECT TipoAjusteId, TipoAjuste, TipoAjusteTxt, Activo 
				FROM TipoAjustes
				";
		return $this->Consulta($Q0);
	}//getTipoAjustes	

	function getTipoAjuste($TipoAjusteId)
	{
		$Q0="SELECT TipoAjuste, TipoAjusteTxt
			FROM TipoAjustes AS T1
			WHERE TipoAjusteId IN ($TipoAjusteId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}

	function getBuscaTipoAjustes($TipoAjuste, $Descripcion, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT '#TipoAjuste', 'TipoAjuste', 'Descripcion', 'Activo'
				UNION
				SELECT TipoAjusteId, TipoAjuste, TipoAjusteTxt, Activo 
				FROM TipoAjustes
				WHERE TipoAjuste LIKE '%$TipoAjuste%'
				AND TipoAjusteTxt LIKE '%$Descripcion%'
				AND Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaTipoAjustes

	function addTipoAjuste($TipoAjuste, $TipoAjusteTxt)
	{
		$Q0="INSERT INTO TipoAjustes (TipoAjusteId, TipoAjuste, TipoAjusteTxt, Activo)
			 VALUES(NULL, UCASE('$TipoAjuste'), UCASE('$TipoAjusteTxt'), 1)";
		$this->Insertar($Q0);
	}//addTipoAjuste

	function deleteTipoAjuste($llaves)
	{
		$Q0="UPDATE TipoAjustes SET Activo=0 WHERE TipoAjusteId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteTipoAjuste

	function activaTipoAjuste($llaves)
	{
		$Q0="UPDATE TipoAjustes SET Activo=1 WHERE TipoAjusteId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaTipoAjuste
	
	function updateTipoAjuste($TipoAjusteId, $TipoAjuste, $TipoAjusteTxt)
	{
		$Q0="UPDATE TipoAjustes
			 SET 	TipoAjuste='$TipoAjuste', 
			 		TipoAjusteTxt='$TipoAjusteTxt'
			 WHERE TipoAjusteId =REPLACE('$TipoAjusteId', ',', '')";
		$this->Consulta($Q0);
	}//updateTipoAjuste

	//// PROVEEDORES ////
	function getProveedores()
	{
		$Q0="SELECT ' #Proveedor', 'Proveedor', 'Contacto', 'RFC', 'Telefono 1', 'Telefono 2', 'Calle', 'Colonia', 'CodigoPostal', 'Correo', 'Comentarios', 'Activo '
				UNION
				SELECT ProveedorId, Nombre, Contacto, Rfc, Telefono1, Telefono2, Calle, Colonia, CodigoPostal, Correo, Comentarios, T1.Activo 
				FROM Proveedores AS T1
				LEFT JOIN CodigosPostales AS T2 ON T2.CodigoPostalId=T1.CodigoPostalId
				";
		return $this->Consulta($Q0);
	}//getProveedores

	function getProveedor($ProveedorId)
	{
		$Q0="SELECT Nombre, Contacto, Rfc, Telefono1, Telefono2, Calle, Colonia, CodigoPostal, Correo, Comentarios, T1.CodigoPostalId 
			FROM Proveedores AS T1
			LEFT JOIN CodigosPostales AS T2 ON T2.CodigoPostalId=T1.CodigoPostalId
			WHERE ProveedorId IN ($ProveedorId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}

	function getBuscaProveedores($Proveedor, $Rfc, $Calle, $Telefono1, $Telefono2, $CodigoPostal, $Colonia, $Correo, $Web, $Matriz, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

		$Q0="SELECT ' #Proveedor', 'Proveedor', 'Contacto', 'RFC', 'Telefono 1', 'Telefono 2', 'Calle', 'Colonia', 'CodigoPostal', 'Correo', 'Comentarios', 'Activo '
				UNION
				SELECT ProveedorId, Nombre, Contacto, Rfc, Telefono1, Telefono2, Calle, Colonia, CodigoPostal, Correo, Comentarios, T1.Activo 
				FROM Proveedores AS T1
				LEFT JOIN CodigosPostales AS T2 ON T2.CodigoPostalId=T1.CodigoPostalId
				WHERE T1.Proveedor LIKE '%$Proveedor%'
				AND T1.Calle LIKE '%$Calle%'				
				AND T2.CodigoPostal LIKE '%$CodigoPostal%'
				AND T2.Colonia LIKE '%$Colonia%'
				AND T1.Telefono1 LIKE '%$Telefono1%'
				AND T1.Telefono2 LIKE '%$Telefono2%'
				AND T1.Correo LIKE '%$Correo%'				
				AND T1.RFC LIKE '%$Rfc%'
				AND T1.Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaProveedores

	function addProveedor($Nombre, $Contacto, $Rfc, $Tel1, $Tel2, $Calle, $CodigoPostalId, $Correo, $Comentarios)
	{
		$Q0="INSERT INTO Proveedores (ProveedorId, Nombre, Contacto, Rfc, Telefono1, Telefono2, Calle, CodigoPostalId, Correo, Comentarios, Activo)
			 VALUES(NULL, UCASE('$Nombre'), UCASE('$Contacto'), UCASE('$Rfc'), '$Tel1', '$Tel2', UCASE('$Calle'), '$CodigoPostalId', '$Correo', '$Comentarios',  1)";
		$this->Insertar($Q0);
	}//addProveedor

	function deleteProveedor($llaves)
	{
		$Q0="UPDATE Proveedores SET Activo=0 WHERE ProveedorId IN ($llaves 0)";
		$this->Consulta($Q0);
	}	

	function activaProveedor($llaves)
	{
		$Q0="UPDATE Proveedores SET Activo=1 WHERE ProveedorId IN ($llaves 0)";
		$this->Consulta($Q0);
	}	
	
	function updateProveedor($ProveedorId, $Nombre, $Contacto, $Rfc, $Tel1, $Tel2, $Calle, $CodigoPostalId, $Correo, $Comentarios)
	{
		$Q0="UPDATE Proveedores
			 SET 	Nombre='$Nombre', 
			 		Contacto='$Contacto',
			 		Calle='$Calle', 
			 		CodigoPostalId=$CodigoPostalId, 
			 		Telefono1='$Tel1', 
			 		Telefono2='$Tel2',  
			 		Correo='$Correo', 			 		
			 		RFC=UCASE('$Rfc'), 
			 		Comentarios='$Comentarios'
			 WHERE ProveedorId IN ($ProveedorId 0)";
		$this->Consulta($Q0);
	}//addProveedor


//// ARTICULOS ////
	function getArticulos()
	{
		$Q0="SELECT '#Articulo', 'Clase Articulo', 'Articulo', 'Descripcion', 'Atributo 1', 'Atributo 2', 'Atributo 3', 'Costo', 'Minimo', 'Maximo', 'Activo'
				UNION
				SELECT ArticuloId, ClaseArticulo, Articulo, descripcion, Att1, Att2, Att3, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, Minimo, Maximo, T1.Activo
				FROM Articulos AS T1
				LEFT JOIN ClaseArticulos AS T2 ON T2.ClaseArticuloId=T1.ClaseArticuloId
			";
		return $this->Consulta($Q0);
	}//getArticulos	


	function getArticulo($ArticuloId)
	{
		$Q0="SELECT '#Articulo', 'Clase Articulo', 'Articulo', 'Descripcion', 'Atributo 1', 'Atributo 2', 'Atributo 3', 'Costo', 'Minimo', 'Maximo', 'Activo'
				UNION
				SELECT ArticuloId, ClaseArticulo, Articulo, Descripcion, Att1, Att2, Att3, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, Minimo, Maximo, T1.Activo
				FROM Articulos AS T1
				LEFT JOIN ClaseArticulos AS T2 ON T2.ClaseArticuloId=T1.ClaseArticuloId
				WHERE T1.ArticuloId IN ($ArticuloId 0)
			LIMIT 1";
		return mysql_fetch_row($this->Consulta($Q0));
	}//getArticulo

	function getBuscaArticulos($ClaseArticuloId, $Articulo, $Descripcion, $Att1, $Att2, $Att3, $Costo, $Minimo, $Maximo, $Activo)
	{
		if($Activo==2)
			$FActivo='0,1';
		else
			$FActivo=$Activo;

	
		$Q0="SELECT '#Articulo', 'Clase Articulo', 'Articulo', 'Descripcion', 'Atributo 1', 'Atributo 2', 'Atributo 3', 'Costo', 'Minimo', 'Maximo', 'Activo'
				UNION
				SELECT ArticuloId, ClaseArticulo, Articulo, Descripcion, Att1, Att2, Att3, CONCAT('$ ',FORMAT(Costo,2)) AS Costo, Minimo, Maximo, T1.Activo
				FROM Articulos AS T1
				LEFT JOIN ClaseArticulos AS T2 ON T2.ClaseArticuloId=T1.ClaseArticuloId
				WHERE T1.ClaseArticuloId=$ClaseArticuloId
				AND Articulo LIKE '%$Articulo%'		
				AND Descripcion LIKE '%$Descripcion%'
				AND Att1 LIKE '%$Att1%'
				AND Att2 LIKE '%$Att2%'
				AND Att3 LIKE '%$Att3%'
				AND Costo LIKE '%$Costo%'
				AND Precio LIKE '%$Precio%'
				AND T1.Activo IN ($FActivo)
				";				
		return $this->Consulta($Q0);
	}//getBuscaArticulos	

	function addArticulo($ClaseArticuloId, $Articulo, $Descripcion, $Att1, $Att2, $Att3, $Costo, $Minimo, $Maximo)
	{
		$Q0="INSERT INTO Articulos (ArticuloId, ClaseArticulo, Articulo, Descripcion, Att1, Att2, Att3, Costo, Minimo, Maximo, Activo)
                  VALUES(NULL, $ClaseArticuloId, UCASE('$Articulo'), UCASE('$Descripcion'), UCASE('$Att1'), UCASE('$Att2'), UCASE('$Att3'), $Costo, $Minimo, $Maximo, 1)";
        
        $this->StartTransaccion();
        		if($this->Consulta($Q0))
        		{
        			$this->AceptaTransaccion();
        			return true;
        		}
  		$this->CancelaTransaccion();
        return false;
		
	}//addArticulo

	function deleteArticulo($llaves)
	{
		$Q0="UPDATE Articulos SET Activo=0 WHERE ArticuloId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//deleteArticulo

	function activaArticulo($llaves)
	{
		$Q0="UPDATE Articulos SET Activo=1 WHERE ArticuloId IN ($llaves 0)";
		$this->Consulta($Q0);
	}//activaArticulo
	
	function updateArticulo($ClaseArticuloId, $Articulo, $Descripcion, $Att1, $Att2, $Att3, $Costo, $Minimo, $Maximo)
	{
		$Q0="UPDATE Articulos SET ClaseArticuloId=$ClaseArticuloId,
								  Articulo=UCASE('$Articulo'), 
								  Descripcion=UCASE('$Descripcion'),
								  Att1=UCASE('$Att1'),
								  Att2=UCASE('$Att2'),
								  Att3=UCASE('$Att3'),
								  Costo=$Costo,
								  Minimo=$Minimo,
								  Maximo=$Maximo
			 WHERE ArticuloId=REPLACE('$ArticuloId', ',', '')";
		
        $this->StartTransaccion();
        		if($this->Consulta($Q0))
        		{
        			$this->AceptaTransaccion();
        			return true;
        		}
        $this->CancelaTransaccion();
        return false;
	}//updateArticulo

	function getListaPuntos()
	{
		$MisPuntos=$this->getMisPuntos();
		$Cadena='<table id="MiTabla" >
					<thead>
						<tr>
							<th>#PuntoVenta</th>						
							<th>Region</th>
							<th>SunRegion</th>										
							<th>Plaza</th>
							<th>Punto de Venta</th>
							<th>Elige</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT T1.PuntoVentaId, Region, SubRegion, Plaza, PuntoVenta FROM PuntosVenta AS T1
			  LEFT JOIN Plazas AS T2 ON T2.PlazaId=T1.PlazaId
			  LEFT JOIN SubRegiones AS T3 ON T3.SubRegionId=T2.SubRegionId
			  LEFT JOIN Regiones AS T4 ON T4.RegionId=T3.RegionId
			  WHERE PuntoVentaId IN ($MisPuntos)
			  ORDER BY PuntoVenta ASC
			  ";

		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>
							<td>'.utf8_decode($A0[2]).'</td>
							<td>'.utf8_decode($A0[3]).'</td>
							<td>'.utf8_decode($A0[4]).'</td>
							<td align="center"><input type="radio" name="Punto" id="Punto" class="Pt" value="'.$A0[0].'" onclick="setEleccion(this,2)"/></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}

	function getListaAsesores()
	{
		$MisPuntos=$this->getMisPuntos();
		$Cadena='<table id="MiTabla2" >
					<thead>
						<tr>
							<th>#Asesor</th>						
							<th>Punto de Venta</th>
							<th>#Coordinador</th>						
							<th>Coordinador</th>										
							<th>Asesor</th>			
							<th>SubCategoria</th>							
							<th>Elige</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT T1.HistorialPuestoEmpleadoId, PuntoVenta, T4.EmpleadoId, CONCAT_WS(' ', T4.Nombre, T4.Paterno, T4.Materno), CONCAT_WS(' ', T3.Nombre, T3.Paterno, T3.Materno), Categoria
				FROM HistorialPuestosEmpleados AS T1
				LEFT JOIN CoordinadoresEmpleados AS T2 ON T2.EmpleadoId=T1.EmpleadoId AND T2.FechaBaja='0000-00-00'
				LEFT JOIN Empleados AS T3 ON T3.EmpleadoId=T1.EmpleadoId
				LEFT JOIN Empleados AS T4 ON T4.EmpleadoId=T2.CoordinadorId
				LEFT JOIN HistorialPuntosEmpleados AS T5 ON T5.EmpleadoId=T1.EmpleadoId AND T5.Fisico=1 AND T5.FechaBaja='0000-00-00'
				LEFT JOIN PuntosVenta AS T6 ON T6.PuntoVentaId=T5.PuntoVentaId
				LEFT JOIN Categorias AS T7 ON T7.CategoriaId=T1.CategoriaId
				WHERE T1.PuestoId=1
				AND T1.FechaBaja='0000-00-00'
				AND T6.PuntoVentaId IN ($MisPuntos)
			  ";

		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>
							<td>'.utf8_decode($A0[2]).'</td>
							<td>'.utf8_decode($A0[3]).'</td>
							<td>'.utf8_decode($A0[4]).'</td>							
							<td>'.utf8_decode($A0[5]).'</td>							
							<td align="center"><input type="radio" name="VId" id="VId" class="Pt" value="'.$A0[0].'" onclick="setEleccion(this,3)"/></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}


	function getListaReferencias($Clave)
	{
		

		$Cadena='<table id="MiTablaR" >
					<thead>
						<tr>
							<th>Nombre Referencia</th>						
							<th>Parentesco</th>
							<th>Telefono</th>										
							<th>Correo Electronico</th>			
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT CONCAT_WS(' ', Nombre, paterno, Materno) AS Referencia, Parentesco, Telefono, Mail
				FROM Referencias AS T1
				LEFT JOIN Parentescos AS T2 ON T2.ParentescoId=T1.ParentescoId
				WHERE Clave='$Clave'
			  ";

		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>
							<td>'.utf8_decode($A0[2]).'</td>
							<td>'.utf8_decode($A0[3]).'</td>							
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}


	function getListaAddOn()
	{
		
		$Cadena='<table id="MiTabla3" >
					<thead>
						<tr>
							<th>#Add On</th>						
							<th>Add On</th>
							<th>Descripcion</th>										
							<th>Seleciona</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT AddonId, Addon, AddonTxt FROM Addon WHERE Activo=1";
		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>
							<td>'.utf8_decode($A0[2]).'</td>
							<td align="center"><input type="checkbox"  name="AddOns" id="AddOns" class="pv" value="'.$A0[0].'" onclick="setSeleccion(this, 2)" /></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}

	function getListaServicios()
	{
		
		$Cadena='<table id="MiTabla4" >
					<thead>
						<tr>
							<th>#Servicio Adicional</th>						
							<th>Servicio Adicional</th>
							<th>Seleciona</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT ServicioAdicionalId, ServicioAdicional FROM ServiciosAdicionales WHERE Activo=1";
		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>
							<td align="center"><input type="checkbox"  name="OtrosServ" id="OtrosServ" class="pv" value="'.$A0[0].'" onclick="setSeleccion(this, 3)" /></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}

	function getListaClientes()
	{
		//$MisPuntos=$this->getMisPuntos();
		$Cadena='<table id="MiTabla5" >
					<thead>
						<tr>
							<th>#Cliente</th>						
							<th>Nombre</th>
							<th>RFC</th>
							<th>Elige</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT ClienteId, CONCAT_WS(' ', Nombre, Paterno, Materno) AS Cliente, RFC FROM Clientes";

		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>
							<td>'.utf8_decode($A0[2]).'</td>							
							<td align="center"><input type="radio" name="ClienteId" id="ClienteId" class="Pt" value="'.$A0[0].'" onclick="setEleccion(this,4)"/></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}

	function getListaEquipos()
	{
		$Cadena='<table id="MiTabla6" >
					<thead>
						<tr>
							<th>#Equipo</th>						
							<th>Equipo</th>
							<th>Elige</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT EquipoId, Equipo AS Equipo
			  FROM Equipos AS T1
			  LEFT JOIN Marcas AS T2 ON T2.MarcaId=T1.MarcaId
			  WHERE T1.Activo=1";

		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>							
							<td align="center"><input type="radio" name="EquipoId" id="EquipoId" class="Pt" value="'.$A0[0].'" onclick="setEleccion(this,5)"/></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}

	function getListaPlanes()
	{
		$Cadena='<table id="MiTabla7" >
					<thead>
						<tr>
							<th>#Plan</th>						
							<th>#TipoPlan</th>							
							<th>Plan</th>
							<th>Elige</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT T1.PlanId, T1.TipopLanId, CONCAT_WS(' ',T3.TipoPlan, T2.Plan) FROM TiposPlanPlanes AS T1
			  LEFT JOIN Planes AS T2 ON T2.PlanId=T1.PlanId
			  LEFT JOIN TiposPlan AS T3 ON T3.TipoPlanId=T1.TipoPlanId
  			  WHERE T2.Activo=1 ";

		$R0=$this->Consulta($Q0);
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>							
							<td>'.utf8_decode($A0[2]).'</td>														
							<td align="center"><input type="radio" name="PlanId" id="PlanId" class="Pt" value="'.$A0[0].','.$A0[1].'" onclick="setEleccion(this,6)"/></td>
						</tr>
				';										
			$t=(!$t);	
		}
				$Cadena.='</tbody>
						</table>';
		return $Cadena;			
	}

//:: Ventanilla Unica :::::::::::::::::::::::::::::::::::::::::::::::::::::::::://


	function addReferencia($Clave, $ParentescoId, $Nombre, $Paterno, $Materno, $Telefono, $Mail)
	{
		$Q0="INSERT INTO Referencias 
			 (ReferenciaId, ParentescoId, Nombre, paterno, Materno, Telefono, Mail, Clave)
			 VALUES(NULL, $ParentescoId, UCASE('$Nombre'), UCASE('$Paterno'), UCASE('$Materno'), UCASE('$Telefono'), UCASE('$Mail'), '$Clave')";

		if($this->Consulta($Q0) & $this->addBitacora(22, 2, mysql_insert_id(),'', 'Referencia'))
		{			
			return $this->getListaReferencias($Clave);
		}
		else
			return utf8_decode('<span class="alerta">Â¡No fue posible agregar el registro!</span>');

	}

	function addCliente($TipoPersonaId, $NombreC, $PaternoC, $MaternoC, $RFCC, $Calle, $NExterior,$NInterior, $ColoniaId, $TLocal, $TMovil, $NombreCT, $PaternoCT, $MaternoCT)
	{
		$this->StartTransaccion();
		$Q0="INSERT INTO Clientes (ClienteId, Nombre, Paterno, Materno, RFC, TipoPersonaId)
            VALUE (NULL, UCASE('$NombreC'), UCASE('$PaternoC'), UCASE('$MaternoC'), UCASE('$RFCC'), $TipoPersonaId)";

		if($this->Consulta($Q0))			
		{			
			$ClienteId=mysql_insert_id();
			$Q1="INSERT INTO HistorialDatosClientes (HistorialDatosClienteId, ClienteId, NombreContacto, 
													 PaternoContacto, MaternoContacto, Calle,
													 NoExterior, NoInterior, ColoniaId, TelefonoLocal, TelefonoMovil)
							 VALUES(NULL, $ClienteId, UCASE('$NombreCT'), UCASE('$PaternoCT'), UCASE('$MaternoCT'), 
							 		UCASE('$Calle'), '$NExterior','$NInterior', $ColoniaId, '$TLocal', '$TMovil')
			";
			if($this->Consulta($Q1) & $this->addBitacora(22, 2, $ClienteId,'', 'Cliente'))			
			{			
			$this->AceptaTransaccion();
			return $ClienteId;
			}
		}
			$this->CancelaTransaccion();
			return 0;

	}

	function addLinea($Clave, $EquipoId, $PlanId, $TipoPlanId, $AddOn, $Servicios, $Plazo)
	{
		$Q0="INSERT INTO TLineas (RegistroId, Clave, EquipoId, PlanId, TipoPlanId,  PlazoId)
                   VALUES(NULL, '$Clave', $EquipoId, $PlanId, $TipoPlanId, '$Plazo')";


		$this->StartTransaccion();
		if($this->Consulta($Q0))
		{
			$RegistroId=mysql_insert_id();

		$Q1="INSERT IGNORE INTO TLineasAddon
			 SELECT $RegistroId, AddonId FROM Addon WHERE AddonId IN ($AddOn)";
			 
		$Q2="INSERT IGNORE INTO TLineasServicios
			 SELECT $RegistroId, ServicioAdicionalId FROM ServiciosAdicionales WHERE ServicioAdicionalId IN ($Servicios)";

		
		if($this->Consulta($Q1) & $this->Consulta($Q2))
			{
				$this->AceptaTransaccion();
			}
		}
			$this->CancelaTransaccion();

		return $this->getListaLineas($Clave);
	}

	function getListaLineas($Clave)
	{	$Cta=0;
		$Cadena='<table id="MiTablaL" >
					<thead>
						<tr>
							<th>Equipo</th>						
							<th>Plan</th>
							<th>Tipo Plan</th>										
							<th>Plazo</th>
							<th>AddOn</th>
							<th>Servicios</th>
							<th>Eliminar</th>
						</tr>
					</thead>
					<tbody>';			
		$t=true;
		$Q0= "SELECT Equipo, Plan, TipoPlan, Plazo, AddOn, Servicios, T1.RegistroId 
				FROM TLineas AS T1
				LEFT JOIN Equipos AS T2 ON T2.EquipoId=T1.EquipoId
				LEFT JOIN Planes AS T3 ON T3.PlanId=T1.PlanId
				LEFT JOIN TiposPlan AS T4 ON T4.TipoPlanId=T1.TipoPlanId
				LEFT JOIN Plazos AS T5 ON T5.PlazoId=T1.PlazoId
				LEFT JOIN (SELECT RegistroId, GROUP_CONCAT(AddOn SEPARATOR ' - ') AS AddOn FROM TLineasAddon AS T1
				           LEFT JOIN Addon AS T2 ON T2.AddonId=T1.AddonId
				           GROUP BY RegistroId
				          ) AS T6 ON T6.RegistroId=T1.RegistroId
				LEFT JOIN (SELECT RegistroId, GROUP_CONCAT(ServicioAdicional SEPARATOR ' - ') AS Servicios FROM TLineasServicios AS T1
				           LEFT JOIN ServiciosAdicionales AS T2 ON T2.ServicioAdicionalId=T1.ServicioAdicionalId
				           GROUP BY RegistroId
				          ) AS T7 ON T7.RegistroId=T1.RegistroId
				WHERE Clave='$Clave'				
			  ";

		$R0=$this->Consulta($Q0);
		
		while($A0=mysql_fetch_row($R0)) 
		{
			if($t) $Clase='';
			else $Clase='class="alt"';
				$Cadena.='
						<tr '.$Clase.'>
							<td>'.utf8_decode($A0[0]).'</td>
							<td>'.utf8_decode($A0[1]).'</td>
							<td>'.utf8_decode($A0[2]).'</td>
							<td>'.utf8_decode($A0[3]).'</td>							
							<td>'.utf8_decode($A0[4]).'</td>							
							<td>'.utf8_decode($A0[5]).'</td>																	
							<td align="center"><img src="img/Remove.png" title="Eliminar" onclick="Remover('.$A0[6].','.$Clave.',1)" /></td>
						</tr>
				';										
			$t=(!$t);	
		}
		$Q1="SELECT COUNT(Clave) AS Cta FROM TLineas WHERE Clave='$Clave'";
		list($Cta)=mysql_fetch_row($this->Consulta($Q1));

				$Cadena.='</tbody>
						</table>
						<input type="hidden" name="NoLineas" id="NoLineas" value="'.$Cta.'" />
						';
		return $Cadena;			
	}




	function removeLinea($RegistroId, $Clave)
	{
		$Q0="DELETE FROM TLineas WHERE RegistroId=$RegistroId";
		$this->Consulta($Q0);
		return $this->getListaLineas($Clave);
	}


function altaFolioVU($Folio,$FechaContrato, $PuntoVentaId, $VendedorId, $CoordinadorId, $ClienteId,
        $TipoContratacionId, $TipoPagoId, $Comentarios='', $Clave)
{
	$FechaContrato=$this->CambiarFormatoFecha($FechaContrato);

	if($this->Existe('Folio',$Folio,'HFolios'))
		return utf8_decode('<span class="alerta">Â¡Este Folio ya existe!</span>');

	$Q0="INSERT INTO HFolios (Folio, FechaCaptura, FechaContrato, FechaSS, PuntoventaId, UsuarioId, HistorialPuestoEmpleadoId,
                     CoordinadorId, ClienteId, TipoContratacionId, TipoPagoId, Comentarios, Clave, MovimientoId)
					 VALUES('$Folio', CURDATE(), '$FechaContrato', '0000-00-00', $PuntoVentaId, $this->UsuarioId, $VendedorId, $CoordinadorId, $ClienteId,
        					$TipoContratacionId, $TipoPagoId, '$Comentarios', '$Clave',0)";
	$Q1="INSERT INTO LFolios
		 SELECT RegistroId, '$Folio', PlanId, EquipoId, PlazoId, TipoPlanId, 1, 0, '', CURDATE() FROM TLineas WHERE Clave='$Clave'";

	$Q2="INSERT INTO LineasAddon
		 SELECT T1.RegistroId, T1.AddonId,0 FROM TLineasAddon AS T1
		 LEFT JOIN TLineas AS T2 ON T2.RegistroId=T1.RegistroId
		 WHERE T2.Clave='$Clave'";

	$Q3="INSERT INTO LineasServicios
		 SELECT T1.RegistroId, T1.ServicioAdicionalId, 0 FROM TLineasServicios AS T1
		 LEFT JOIN TLineas AS T2 ON T2.RegistroId=T1.RegistroId
		 WHERE T2.Clave='$Clave'";
		 																
	if($this->Consulta($Q0) & $this->Consulta($Q1) & $this->Consulta($Q2) & $this->Consulta($Q3) & $this->addBitacora(22, 2, 0, $Folio,''))
			{
				$this->AceptaTransaccion();
				return 'OK';
			}
		
			$this->CancelaTransaccion();
			return utf8_decode('<span class="alerta">Â¡No fue posible realizar el registro!</span>');	
}


function ScrollCoordinadores($valor)
{
	$MisPuntos=$this->getMisPuntos();
		$query="SELECT T1.EmpleadoId, CONCAT_WS(' ', Nombre, Paterno, Materno) AS Coordinador
				FROM HistorialPuestosEmpleados AS T1
				LEFT JOIN Empleados AS T2 ON T2.EmpleadoId=T1.EmpleadoId
				LEFT JOIN HistorialPuntosEmpleados AS T3 ON T3.EmpleadoId=T1.EmpleadoId AND T3.FechaBaja='0000-00-00'
				WHERE T1.FechaBaja='0000-00-00' AND T1.PuestoId IN (2,13)
				AND T3.PuntoventaId IN ($MisPuntos)
				GROUP BY T1.EmpleadoId";

		$resultado=mysql_query("$query", $this->conexion) or die(mysql_error());
	
		while($arreglo=mysql_fetch_row($resultado))
		{
			if ($valor==$arreglo[0])
			{
				echo "<option selected value=\"$arreglo[0]\" title=\"".utf8_decode($arreglo[1])."\" >".utf8_decode($arreglo[1])."</option> \n";	
			}
			else 
			{
				echo "<option value=\"$arreglo[0]\" title=\"$arreglo[1]\">".utf8_decode($arreglo[1])."</option> \n";	
			}
		}
	}//Scroll

function getHFolio($Folio)
{

$Q0="SELECT
TipoContratacionId,
DATE_FORMAT(FechaContrato, '%d-%m-%Y') AS FContratacion,
DATE_FORMAT(FechaSS, '%d-%m-%Y') AS FContratacion,
TipoPagoId,
T1.PuntoventaId,
PuntoVenta,
T1.HistorialPuestoEmpleadoId,
CONCAT_WS(' ', T4.Nombre, T4.Paterno, T4.Materno) AS Vendedor,
T7.SubCategoriaId,
T7.SubCategoria,
CoordinadorId,
CONCAT_WS(' ', T5.Nombre, T5.Paterno, T5.Materno) AS Coordinador,
Comentarios,
T1.ClienteId,
CONCAT_WS(' ', T6.Nombre, T6.Paterno, T6.Materno),
T6.RFC, Clave
FROM HFolios AS T1
LEFT JOIN PuntosVenta AS T2 ON T2.PuntoventaId=T1.PUntoVentaId
LEFT JOIN HistorialPuestosEmpleados AS T3 ON T3.HistorialPuestoEmpleadoId=T1.HistorialPuestoEmpleadoId
LEFT JOIN Empleados AS T4 ON T4.EmpleadoId=T3.EmpleadoId
LEFT JOIN Empleados AS T5 ON T5.EmpleadoId=T1.CoordinadorId
LEFT JOIN Clientes AS T6 ON T6.ClienteId=T1.ClienteId
LEFT JOIN SubCategorias AS T7 ON T7.SubCategoriaId=T3.CategoriaId
				WHERE Folio='$Folio'";
	return mysql_fetch_row($this->Consulta($Q0));			
}

function PreparaLineas($Folio, $Clave)
{
	$Q0="INSERT IGNORE INTO TLineas
		SELECT  RegistroId, '$Clave', EquipoId, PlanId, TipoPlanId, PlazoId
		FROM LFolios WHERE Folio='$Folio'";
return $this->Consulta($Q0);
}

function getTablaLayout()
{
	$Q0="SELECT 'Opciones', 'Layout', 'Descripcion'
		 UNION
 		 SELECT CONCAT('descargaLayout(',LayoutId,');') AS Opcion, Layout, LayoutTxt FROM Layout WHERE Activo=1";
	return $this->Consulta($Q0);
}

function getInventarioVSO()
{
	$Q0="SELECT
			CONCAT(LPAD('106182',10,'0'),',') AS CustomId,
			CONCAT(LPAD(EquipoId,8,'0'),',') AS Item,
			CONCAT(LPAD(ClavePunto,10,'0'),',') AS Site,
			CONCAT(DATE_FORMAT(CURDATE(),'%d/%m/%Y'),',') AS Fecha,
			CONCAT(SUM(Cantidad),',') AS Qty,
			CONCAT(0,',') AS Transito,
			0 AS Pendiente
			FROM Inventario AS T1
			LEFT JOIN Recepciones AS T2 ON T2.MovimientoId=T1.MovimientoId
			LEFT JOIN PuntosVenta AS T3 ON T3.PuntoVentaId=T2.PuntoVentaId
			WHERE Cantidad>0 AND ClavePunto!='000'
			GROUP BY T2.PuntoVentaId, EquipoId
			";

	return $this->Consulta($Q0);
}

function getConsumosVSO()
{
	$Q0="UPDATE Inventario SET EnvioVSO=CURDATE() WHERE EnvioVSO='0000-00-00' AND Cantidad<0 AND Activacion!='0000-00-00'";

	$Q1="SELECT
		    CONCAT(LPAD('106182',10,'0'),',') AS CustomId,
			CONCAT(LPAD(T1.EquipoId,8,'0'),',') AS Item,
  			CONCAT(LPAD(ClavePunto,10,'0'),',') AS Site,
			CONCAT(DATE_FORMAT(Activacion,'%d/%m/%Y'),',') AS Fecha,
			CONCAT(IFNULL(Venta,0),',') AS Qty,
			'SALE' AS Movimiento
		FROM Inventario AS T1
		LEFT JOIN HFolios AS T2 ON T2.MovimientoId=T1.MovimientoId
		LEFT JOIN PuntosVenta AS T3 ON T3.PuntoVentaId=T2.PuntoVentaId
		LEFT JOIN (
		            SELECT EquipoId, PuntoVentaId, SUM(Cantidad) AS Venta FROM Inventario AS T1
		            INNER JOIN HFolios AS T2 ON T2.MovimientoId=T1.MovimientoId
		            WHERE EnvioVSO=CURDATE()
		            GROUP BY EquipoId, PuntoVentaId
		          ) AS T4 ON T4.EquipoId=T1.EquipoId AND T4.PuntoVentaId=T2.PuntoVentaId
		WHERE  ClavePunto!='000'
		GROUP BY T2.PuntoVentaId, T1.EquipoId";

			if($this->Consulta($Q0))
			return $this->Consulta($Q1);
		return false;
}

function getChangeEstatus($Folio)
{
	echo 'eaeaeaea';
}


}
?>